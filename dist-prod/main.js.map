{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/api/api-response.ts","webpack:///./src/app/core/api/api.service.ts","webpack:///./src/app/core/utils/list.service.ts","webpack:///./src/app/core/utils/storage.service.ts","webpack:///./src/app/core/utils/user/user.service.ts","webpack:///./src/app/shared.module.ts","webpack:///./src/app/views/auth/auth.module.ts","webpack:///./src/app/views/auth/auth.routes.ts","webpack:///./src/app/views/auth/guard/auth.guard.ts","webpack:///./src/app/views/auth/login/login.component.html","webpack:///./src/app/views/auth/login/login.component.scss","webpack:///./src/app/views/auth/login/login.component.ts","webpack:///./src/app/views/auth/login/login.module.ts","webpack:///./src/app/views/error/error.module.ts","webpack:///./src/app/views/error/error.routes.ts","webpack:///./src/app/views/error/forbidden/forbidden.component.html","webpack:///./src/app/views/error/forbidden/forbidden.component.scss","webpack:///./src/app/views/error/forbidden/forbidden.component.ts","webpack:///./src/app/views/error/forbidden/forbidden.module.ts","webpack:///./src/app/views/error/internal/internal.component.html","webpack:///./src/app/views/error/internal/internal.component.scss","webpack:///./src/app/views/error/internal/internal.component.ts","webpack:///./src/app/views/error/internal/internal.module.ts","webpack:///./src/app/views/error/not-found/not-found.component.html","webpack:///./src/app/views/error/not-found/not-found.component.scss","webpack:///./src/app/views/error/not-found/not-found.component.ts","webpack:///./src/app/views/error/not-found/not-found.module.ts","webpack:///./src/app/views/main/aluno/aluno.component.html","webpack:///./src/app/views/main/aluno/aluno.component.ts","webpack:///./src/app/views/main/aluno/aluno.module.ts","webpack:///./src/app/views/main/aluno/info/aluno-info.component.html","webpack:///./src/app/views/main/aluno/info/aluno-info.component.scss","webpack:///./src/app/views/main/aluno/info/aluno-info.component.ts","webpack:///./src/app/views/main/aluno/list/aluno-list.component.html","webpack:///./src/app/views/main/aluno/list/aluno-list.component.scss","webpack:///./src/app/views/main/aluno/list/aluno-list.component.ts","webpack:///./src/app/views/main/curso/curso.component.html","webpack:///./src/app/views/main/curso/curso.component.ts","webpack:///./src/app/views/main/curso/curso.module.ts","webpack:///./src/app/views/main/curso/info/curso-info.component.html","webpack:///./src/app/views/main/curso/info/curso-info.component.scss","webpack:///./src/app/views/main/curso/info/curso-info.component.ts","webpack:///./src/app/views/main/curso/list/curso-list.component.html","webpack:///./src/app/views/main/curso/list/curso-list.component.scss","webpack:///./src/app/views/main/curso/list/curso-list.component.ts","webpack:///./src/app/views/main/disciplina/disciplina.component.html","webpack:///./src/app/views/main/disciplina/disciplina.component.ts","webpack:///./src/app/views/main/disciplina/disciplina.module.ts","webpack:///./src/app/views/main/disciplina/info/disciplina-info.component.html","webpack:///./src/app/views/main/disciplina/info/disciplina-info.component.scss","webpack:///./src/app/views/main/disciplina/info/disciplina-info.component.ts","webpack:///./src/app/views/main/disciplina/list/disciplina-list.component.html","webpack:///./src/app/views/main/disciplina/list/disciplina-list.component.scss","webpack:///./src/app/views/main/disciplina/list/disciplina-list.component.ts","webpack:///./src/app/views/main/home/home.component.html","webpack:///./src/app/views/main/home/home.component.scss","webpack:///./src/app/views/main/home/home.component.ts","webpack:///./src/app/views/main/home/home.module.ts","webpack:///./src/app/views/main/main.component.html","webpack:///./src/app/views/main/main.component.scss","webpack:///./src/app/views/main/main.component.ts","webpack:///./src/app/views/main/main.module.ts","webpack:///./src/app/views/main/main.routes.ts","webpack:///./src/app/views/main/professor/info/professor-info.component.html","webpack:///./src/app/views/main/professor/info/professor-info.component.scss","webpack:///./src/app/views/main/professor/info/professor-info.component.ts","webpack:///./src/app/views/main/professor/list/professor-list.component.html","webpack:///./src/app/views/main/professor/list/professor-list.component.scss","webpack:///./src/app/views/main/professor/list/professor-list.component.ts","webpack:///./src/app/views/main/professor/professor.component.html","webpack:///./src/app/views/main/professor/professor.component.ts","webpack:///./src/app/views/main/professor/professor.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ERROR_ROUTES } from './views/error/error.routes';\r\nimport { AUTH_ROUTES } from './views/auth/auth.routes';\r\nimport { MAIN_ROUTES } from './views/main/main.routes';\r\n\r\nconst routes: Routes = [\r\n    ...AUTH_ROUTES,\r\n    // Your routes here\r\n    ...MAIN_ROUTES,\r\n    // Errors aplication\r\n    ...ERROR_ROUTES\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n<ui-snackbar-container></ui-snackbar-container>\\r\\n\"","module.exports = \":host {\\n  display: block; }\\n\"","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n    title = 'app';\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SharedModule } from './shared.module';\r\nimport { ErrorModule } from './views/error/error.module';\r\nimport { MainModule } from './views/main/main.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthModule } from './views/auth/auth.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        SharedModule,\r\n        AppRoutingModule,\r\n        ErrorModule,\r\n        MainModule,\r\n        AuthModule\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {HttpEventType} from '@angular/common/http';\r\nimport {throwError} from 'rxjs';\r\nimport {UiSnackbar} from 'ng-smn-ui';\r\n\r\nexport class ApiReponse {\r\n\r\n    static extractData(res, callback, cleanResult) {\r\n        if (!callback) {\r\n            return;\r\n        }\r\n\r\n        if (cleanResult) {\r\n            callback(res);\r\n        }\r\n\r\n        if (res.type === HttpEventType.Response && !cleanResult) {\r\n            callback(res.body);\r\n        }\r\n    }\r\n\r\n    static handleError(res, callback, cleanError) {\r\n        if (callback) {\r\n            callback(res);\r\n        }\r\n\r\n        if (cleanError) {\r\n            return throwError(res);\r\n        }\r\n\r\n        switch (res.status) {\r\n            case 0:\r\n                UiSnackbar.show({\r\n                    text: `Um de nossos serviços está fora do ar e não foi possível processar sua requisição. Tente novamente mais tarde.`,\r\n                    actionText: 'OK',\r\n                    action: close => close(),\r\n                    duration: 1000\r\n                });\r\n                break;\r\n            case 400:\r\n                UiSnackbar.show({\r\n                    text: `Requisição inválida. Verifique as informações fornecidas.`,\r\n                    actionText: 'OK',\r\n                    action: close => close()\r\n                });\r\n                break;\r\n            case 409:\r\n                UiSnackbar.show({\r\n                    text: res.error.message,\r\n                    actionText: 'OK',\r\n                    action: close => close()\r\n                });\r\n                break;\r\n            case 500:\r\n                UiSnackbar.show({\r\n                    text: `Ocorreu um erro interno. Já fomos informados do erro. Tente novamente mais tarde.`,\r\n                    actionText: 'OK',\r\n                    action: close => close(),\r\n                    duration: 1000\r\n                });\r\n        }\r\n\r\n        return throwError(res);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpRequest } from '@angular/common/http';\r\nimport { catchError, finalize, map } from 'rxjs/operators';\r\nimport { ApiServiceRequest, ApiServiceRequestOptions } from './api-request';\r\nimport { ApiReponse } from './api-response';\r\nimport { UserService } from '../utils/user/user.service';\r\n\r\nlet API: {};\r\nlet OPTIONS: any;\r\nconst DEFAULT_HEADERS = {\r\n    'Content-Type': 'application/json'\r\n};\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n    constructor(public _http: HttpClient) {\r\n    }\r\n\r\n    /**\r\n     * Atribui o valor dos métodos e dos headers no serviço\r\n     * @param methods {object} - Métodos retornados da API\r\n     * @param options {object} - Opções do menu\r\n     * @return {void}\r\n    **/\r\n    set(methods, options) {\r\n        API = methods;\r\n        OPTIONS = options;\r\n    }\r\n\r\n    /**\r\n     * Configura uma requisão através dos métodos retornados da API\r\n     * @param api {string} - API que será chamada\r\n     * @param funcionalidade {string} - Funcionalidade que será chamada\r\n     * @param metodo {string} - Método que será chamado\r\n     * @param options {object} - Opções adicionais para requisição\r\n     * @return Function\r\n     **/\r\n    prep(api: string, funcionalidade?: string, metodo?: string, options: ApiServiceRequestOptions = {}) {\r\n        if (api && !funcionalidade) {\r\n            return API[api];\r\n        }\r\n        if (api && funcionalidade && !metodo) {\r\n            return API[api][funcionalidade];\r\n        }\r\n\r\n        const method: any = API[api][funcionalidade][metodo];\r\n\r\n        if (method) {\r\n            // Retornando todas as APIs que tem url\r\n            const option: any = OPTIONS.filter(item => {\r\n                return item.url ? item.url.replace('/', '') : item.url === location.pathname.replace('/', '');\r\n            });\r\n\r\n            let idOption = '';\r\n            // Encontrando a opção da página atual\r\n            option.map(item => {\r\n                if (location.pathname.substring(1).indexOf(item.url.substring(1)) !== -1) {\r\n                    idOption = item.id;\r\n                }\r\n            });\r\n\r\n            options.headers = {\r\n                ...DEFAULT_HEADERS, ...options.headers, ...{\r\n                    'Option': idOption,\r\n                    'Authentication': UserService.getToken()\r\n                }\r\n            };\r\n\r\n            return {\r\n                call: this.request(method.method, method.url, options)\r\n            };\r\n        }\r\n\r\n        throw { message: 'Método não encontrado' };\r\n    }\r\n\r\n    /**\r\n     * Configura um requisição HTTP\r\n     * @param method {string} - Tipo da requisição\r\n     * @param url {string} - Url da API que será chamada\r\n     * @param options {object} - Opções adicionais para requisição\r\n     * Os parâmetros tipos reais dos parâmetros podem ser encontrados no arquivo irmão(api-request.ts)\r\n     * @return function\r\n     **/\r\n    http(method: ApiServiceRequest['method'], url: ApiServiceRequest['url'], options: ApiServiceRequestOptions = {}) {\r\n        return {\r\n            call: this.request(method, url, options)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Efetua a requisição em uma API\r\n     * @param method {string} - Tipo da requisição\r\n     * @param url {string} - Url da API que será chamada\r\n     * @param options {object} - Opções adicionais para requisição\r\n     * @return function\r\n     **/\r\n    request(method: ApiServiceRequest['method'], url: ApiServiceRequest['url'], options: ApiServiceRequestOptions = {}) {\r\n        return (data?: {}) => {\r\n            if (data) {\r\n                const paramsFormatted = this.formatParams(url, data);\r\n                url = paramsFormatted.url;\r\n                const methodFormatted: string = method.toUpperCase();\r\n\r\n                if (methodFormatted === 'GET' || methodFormatted === 'DELETE') {\r\n                    options.params = paramsFormatted.leftover;\r\n                } else {\r\n                    options.body = paramsFormatted.leftover;\r\n                }\r\n            }\r\n\r\n            // url = url.replace('7.37', '10.203');\r\n\r\n            const params = new HttpParams({\r\n                fromObject: options.params\r\n            });\r\n\r\n            const headers = { ...DEFAULT_HEADERS, ...options.headers };\r\n\r\n            const httpOptions: any = {};\r\n\r\n            Object.assign(httpOptions, options);\r\n            httpOptions.headers = this.generateHeaders(headers);\r\n            httpOptions.params = params;\r\n\r\n            const request = new HttpRequest(method, url, httpOptions.body, httpOptions);\r\n\r\n            return {\r\n                subscribe: (next?, error?, complete?) => {\r\n                    return this._http\r\n                        .request(request)\r\n                        .pipe(\r\n                            map(res => ApiReponse.extractData(res, next, options.cleanResult)),\r\n                            catchError(res => ApiReponse.handleError(res, error, options.cleanError)),\r\n                            finalize(complete)\r\n                        )\r\n                        .subscribe();\r\n                }\r\n            };\r\n        };\r\n\r\n    }\r\n\r\n    /**\r\n     * Constroi os Headers de uma requisição\r\n     * @param headers {object} - Headers a serem incluidos na requisição\r\n     * @return {HttpHeaders}\r\n     **/\r\n    generateHeaders(headers) {\r\n        let newHeaders = new HttpHeaders();\r\n        Object.keys(headers).map(key => {\r\n            newHeaders = newHeaders.set(key, headers[key]);\r\n        });\r\n\r\n        return newHeaders;\r\n    }\r\n\r\n    /**\r\n     * Insere os parâmetros na url e retornando a url final e o restante dos valores\r\n     * @param url {string} - Url a ser formatada\r\n     * @param params - Parâmetros, Query Strings e Body da requisição\r\n     * @return {object}\r\n     **/\r\n    formatParams(url, params) {\r\n        const data = Object.assign({}, params);\r\n\r\n        url = url.split('/');\r\n        Object.keys(data).forEach(key => {\r\n            const indexOf = url.indexOf(`:${key}`);\r\n            if (indexOf !== -1) {\r\n                url[indexOf] = data[key];\r\n                delete data[key];\r\n            }\r\n        });\r\n\r\n        return {\r\n            url: url.join('/'),\r\n            leftover: data\r\n        };\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport class ListService {\r\n    length: number;\r\n    head: any;\r\n\r\n    constructor() {\r\n        this.length = 0;\r\n        this.head = null;\r\n    }\r\n\r\n    private node(element: any): any {\r\n        return {\r\n            element: element,\r\n            next: null,\r\n        }\r\n    };\r\n\r\n    append(element: any): boolean {\r\n        let node = this.node(element);\r\n        let current;\r\n\r\n        if (!this.head) {\r\n            this.head = node;\r\n        } else {\r\n            current = this.head;\r\n            while (current.next) {\r\n                current = current.next;\r\n            }\r\n\r\n            current.next = node;\r\n        }\r\n        this.length++;\r\n        return true;\r\n    }\r\n\r\n    appendFront(element: any): boolean {\r\n        let node = this.node(element);\r\n\r\n        if (!this.head) {\r\n            this.head = node;\r\n        } else {\r\n            node.next = this.head;\r\n            this.head = node;\r\n        }\r\n        this.length++;\r\n        return true;\r\n    }\r\n\r\n    insert(position: number, element: any): boolean {\r\n        if (position >= 0 && position <= this.length) {\r\n            let node = this.node(element);\r\n            let current = this.head;\r\n            let previous;\r\n            let index = 0;\r\n\r\n            if (position === 0) {\r\n                node.next = current;\r\n                this.head = node;\r\n            } else {\r\n                while (index++ < position) {\r\n                    previous = current;\r\n                    current = current.next;\r\n                }\r\n                node.next = current;\r\n                previous.next = node;\r\n            }\r\n            this.length++\r\n            return true;\r\n        } else {\r\n            console.error('Posição inexistente')\r\n            return false;\r\n        }\r\n    }\r\n\r\n    remove(position: number): boolean {\r\n        if (position >= 0 && position <= this.length) {\r\n            if (position === 0) {\r\n                this.head = this.head.next;\r\n            } else {\r\n                let current = this.head;\r\n                let previous;\r\n                let index = 0;\r\n\r\n                while (index++ < position) {\r\n                    previous = current;\r\n                    current = current.next;\r\n                }\r\n                previous.next = current.next\r\n            }\r\n            this.length--;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    removeLast(): boolean {\r\n        if (this.head) {\r\n            if (!this.head.next) {\r\n                this.head = null;\r\n            } else {\r\n                let current = this.head;\r\n                let previous;\r\n\r\n                while (current.next) {\r\n                    previous = current;\r\n                    current = current.next;\r\n                }\r\n\r\n                previous.next = current.next;\r\n            }\r\n            length--;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    removeFirst(): boolean {\r\n        if (this.head) {\r\n            if (!this.head.next) {\r\n                this.head = null;\r\n            } else {\r\n                this.head = this.head.next;\r\n            }\r\n            this.length--;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    indexOf(element: any): number {\r\n        let current;\r\n        let index = 0;\r\n\r\n        if (this.head.element === element) {\r\n            return index;\r\n        } else {\r\n            current = this.head;\r\n            while (current.next) {\r\n                current = current.next;\r\n                index++;\r\n                if (current.element === element) {\r\n                    return index;\r\n                }\r\n            }\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    contains(key, value) {\r\n        let index = 0;\r\n        if (this.head.element[key] == value) {\r\n            return {\r\n                element: this.head.element,\r\n                index: index\r\n            }\r\n        } else {\r\n            let current = this.head;\r\n            while (current.next) {\r\n                current = current.next;\r\n                index++;\r\n                if (current.element[key] == value) {\r\n                    return {\r\n                        element: current.element,\r\n                        index: index\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        console.error('Nada foi encontrado');\r\n        return null;\r\n    }\r\n\r\n    size(): number {\r\n        return this.length;\r\n    }\r\n\r\n    setSize() {\r\n        this.length = 1;\r\n        let current = this.head;\r\n        while (current.next) {\r\n            this.length++;\r\n            current = current.next\r\n        }\r\n    }\r\n\r\n    getHead(): any {\r\n        return this.head;\r\n    }\r\n\r\n    setHead(newHead: any): void {\r\n        this.head = newHead;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class StorageService {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public setNewItem(key: string, value: string): void {\r\n        window.localStorage.setItem(key, value);\r\n    }\r\n\r\n    public getItem(key): string {\r\n        if (window.localStorage[key]) {\r\n            return window.localStorage.getItem(key);\r\n        }\r\n        console.error('Chave não encontrada');\r\n        return null;\r\n    }\r\n\r\n    public removeItem(key): boolean {\r\n        if (this.getItem(key)) {\r\n            window.localStorage.removeItem(key);\r\n            return true;\r\n        }\r\n        console.error('Chave não encontrada');\r\n        return false;\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {UiCookie} from 'ng-smn-ui';\r\nimport {environment} from '../../../../environments/environment';\r\n\r\nlet user: any = {};\r\nlet token: string;\r\nlet menu: any[];\r\n\r\nconst COOKIE_NAME: any = {\r\n    authentication: `${environment.SYSTEM_PREFIX}Authentication`,\r\n    keepConnect: `${environment.SYSTEM_PREFIX}KeepConnect`\r\n};\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public static get() {\r\n        return {\r\n            user,\r\n            token\r\n        };\r\n    }\r\n\r\n    public static getUser() {\r\n        return user;\r\n    }\r\n\r\n    public static setUser(newUser) {\r\n        user = newUser;\r\n    }\r\n\r\n    public static setMenu(newMenu) {\r\n        menu = newMenu;\r\n    }\r\n\r\n    public static getMenu() {\r\n        return menu;\r\n    }\r\n\r\n    public static getToken() {\r\n        return UiCookie.get(COOKIE_NAME.authentication);\r\n    }\r\n\r\n    public static setToken(newToken, keepConnect?: boolean) {\r\n        token = newToken;\r\n        this.setCookie(token, keepConnect);\r\n    }\r\n\r\n    public static getCookie() {\r\n        return {\r\n            authentication: UiCookie.get(COOKIE_NAME.authentication),\r\n            keepConnect: UiCookie.get(COOKIE_NAME.keepConnect)\r\n        };\r\n    }\r\n\r\n    public static setCookie(token, keepConnect?) {\r\n        UiCookie.set(COOKIE_NAME.keepConnect, keepConnect, keepConnect ? 365 : null, '/');\r\n        UiCookie.set(COOKIE_NAME.authentication, token, keepConnect ? 365 : null, '/');\r\n    }\r\n\r\n    public static remove() {\r\n        user = null;\r\n        token = null;\r\n        UiCookie.delete(COOKIE_NAME.keepConnect);\r\n        UiCookie.delete(COOKIE_NAME.authentication);\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { SMNUIModule, UiToolbarService } from 'ng-smn-ui';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ApiService } from './core/api/api.service';\r\nimport { AuthGuard } from './views/auth/guard/auth.guard';\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    exports: [\r\n        FormsModule,\r\n        BrowserModule,\r\n        SMNUIModule,\r\n        HttpClientModule,\r\n        RouterModule\r\n    ],\r\n    providers: [UiToolbarService, ApiService, AuthGuard],\r\n    bootstrap: []\r\n})\r\nexport class SharedModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {LoginModule} from './login/login.module';\r\nimport {SharedModule} from '../../shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        LoginModule\r\n    ],\r\n    exports: [],\r\n    declarations: [],\r\n    providers: [],\r\n})\r\nexport class AuthModule {\r\n}\r\n","import {Routes} from '@angular/router';\r\nimport {LoginComponent} from './login/login.component';\r\n\r\nexport const AUTH_ROUTES: Routes = [\r\n    {path: 'login', component: LoginComponent}\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UiSnackbar } from 'ng-smn-ui';\r\nimport { UserService } from '../../../core/utils/user/user.service';\r\nimport { ApiService } from '../../../core/api/api.service';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router, private api: ApiService) { }\r\n\r\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n        const usuario = UserService.getUser();\r\n        if (usuario.id) {\r\n            return true;\r\n        } else {\r\n            return this.remakeLogin();\r\n        }\r\n    }\r\n\r\n    remakeLogin(): any {\r\n        return new Promise<boolean>(resolve => {\r\n            const cookies = UserService.getCookie();\r\n\r\n            if (cookies.authentication) {\r\n                const headers = {\r\n                    'Content-Type': 'application/json',\r\n                    'Authentication': cookies.authentication\r\n                };\r\n\r\n                this.api\r\n                    .http('GET', `${environment.AUTH_API}/login/refazer`, { headers: headers })\r\n                    .call()\r\n                    .subscribe(res => {\r\n                        const content = res.content;\r\n                        this.api.set(content.api, content.user.opcoes);\r\n                        UserService.setToken(content.token, !!cookies.keepConnect);\r\n                        UserService.setMenu(content.user.opcoes);\r\n                        UserService.setUser(content.user);\r\n                        resolve(true);\r\n                    }, (res) => {\r\n                        this.handleError(res);\r\n                        resolve(false);\r\n                    });\r\n            } else {\r\n                this.handleError({ status: 401 });\r\n                resolve(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleError(res): any {\r\n        switch (res.status) {\r\n            case 401:\r\n                let text: string;\r\n                switch (res.executionCode) {\r\n                    case 2:\r\n                        text = 'Parece que sua senha está incorreta, tente refazer o login';\r\n                        break;\r\n                    case 3:\r\n                        text = 'Seu usuário está bloqueado';\r\n                        break;\r\n                    case 4:\r\n                        text = 'Sua senha expirou, tente refazer o login';\r\n                        break;\r\n                    case 5:\r\n                        text = 'Você está bloqueado à acessar neste horário';\r\n                        break;\r\n                    default:\r\n                        text = 'Seu login expirou. Refaça o login novamente';\r\n                        break;\r\n                }\r\n                UiSnackbar.show({\r\n                    text,\r\n                    actionText: 'OK',\r\n                    action: close => close()\r\n                });\r\n                this.router.navigate(['/login']);\r\n                break;\r\n            case 403:\r\n                this.router.navigate(['/forbidden']);\r\n                break;\r\n            case 404:\r\n                UiSnackbar.show({\r\n                    text: 'Não conseguimos encontrar seu usuário, tente refazer o login',\r\n                    actionText: 'OK',\r\n                    action: close => close()\r\n                });\r\n                this.router.navigate(['/login']);\r\n                break;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"core\\\">\\r\\n    <div class=\\\"logo\\\">\\r\\n        <!-- <img src=\\\"assets/images/logotipo-transparente.png\\\" alt=\\\"Cronos logo\\\" title=\\\"Cronos logo\\\" style=\\\"margin-left: -16px\\\"> -->\\r\\n    </div>\\r\\n    <ui-card>\\r\\n        <div class=\\\"ui-progress accent\\\" [class.hide]=\\\"!loading\\\">\\r\\n            <div class=\\\"indeterminate\\\"></div>\\r\\n        </div>\\r\\n        <ui-tabs-pages #tabsPages>\\r\\n            <div class=\\\"page pre-info\\\">\\r\\n                <form #preLoginForm=\\\"ngForm\\\" class=\\\"ui-validate on-submit on-dirty\\\" (submit)=\\\"getInfo(preLoginForm, preLogin)\\\">\\r\\n                    <ui-card-title>Inicie sua sessão</ui-card-title>\\r\\n                    <ui-card-content>\\r\\n                        <ui-input-container>\\r\\n                            <input [type]=\\\"authByEmail ? 'email' : 'text'\\\"\\r\\n                                   name=\\\"usuario\\\"\\r\\n                                   [(ngModel)]=\\\"preLogin.usuario\\\"\\r\\n                                   uiInput\\r\\n                                   required\\r\\n                                   #preLoginUsuario=\\\"ngModel\\\"\\r\\n                                   [pattern]=\\\"authByEmail ? '[a-z0-9!#$%&\\\\'*+/=?^_`{|}~.-]+@[a-z0-9-]+(\\\\\\\\.[a-z0-9-]+)*' : null\\\"\\r\\n                                   id=\\\"pre-login-usuario\\\"\\r\\n                                   class=\\\"accent\\\"\\r\\n                                   autofocus>\\r\\n                            <label for=\\\"pre-login-usuario\\\">{{authByEmail ? 'E-mail' : 'Usuário'}}</label>\\r\\n                            <div class=\\\"ui-messages\\\">\\r\\n                                <div *ngIf=\\\"preLoginUsuario.errors && preLoginUsuario.dirty\\\">\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!preLoginUsuario.pristine && !preLoginUsuario.errors.required\\\">\\r\\n                                        Use seu {{authByEmail ? 'e-mail' : 'nome de usuário'}}\\r\\n                                    </div>\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!preLoginUsuario.errors.pattern\\\">\\r\\n                                        Use um e-mail válido\\r\\n                                    </div>\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!preLoginUsuario.errors.notFound\\\">\\r\\n                                        Este {{authByEmail ? 'e-mail' : 'nome de usuário'}} não existe\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ui-input-container>\\r\\n                    </ui-card-content>\\r\\n                    <div class=\\\"ui-button-container cover\\\">\\r\\n                        <button class=\\\"ui-button accent full\\\" uiRipple>Próximo</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"page\\\">\\r\\n                <form #loginForm=\\\"ngForm\\\" class=\\\"ui-validate on-submit on-dirty\\\" (submit)=\\\"login(loginForm, info)\\\">\\r\\n                    <fieldset>\\r\\n                        <ui-toolbar class=\\\"flat\\\">\\r\\n                            <button class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple (click)=\\\"backToLogin()\\\">\\r\\n                                <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n                            </button>\\r\\n                        </ui-toolbar>\\r\\n                        <ul class=\\\"ui-list no-active\\\" [class.multi-line]=\\\"authByEmail\\\" style=\\\"padding: 0\\\">\\r\\n                            <li>\\r\\n                                <div class=\\\"avatar\\\"\\r\\n                                     [ngStyle]=\\\"{'background-image': info.imagem ? 'url(' + info.imagem + ')' : '',\\r\\n                                                 'background-color': info.imagem ? 'white' : info.cor,\\r\\n                                                 'color': isBright(info.cor) ? 'black': 'white'}\\\">\\r\\n                                    <span *ngIf=\\\"info && !info.imagem && info.nome\\\">{{info.nome.charAt(0)}}</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"primary\\\" *ngIf=\\\"!authByEmail\\\">{{info.nome}}</div>\\r\\n                                <div class=\\\"lines\\\" *ngIf=\\\"authByEmail\\\">\\r\\n                                    <div class=\\\"primary\\\">{{info.nome}}</div>\\r\\n                                    <div class=\\\"secondary\\\">{{info.email}}</div>\\r\\n                                </div>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                        <ui-card-content>\\r\\n                            <ui-input-container>\\r\\n                                <input [type]=\\\"typeText ? 'text' : 'password'\\\"\\r\\n                                       [(ngModel)]=\\\"info.senha\\\"\\r\\n                                       uiInput\\r\\n                                       required\\r\\n                                       name=\\\"senha\\\"\\r\\n                                       #loginSenha=\\\"ngModel\\\"\\r\\n                                       id=\\\"login-senha\\\"\\r\\n                                       class=\\\"accent\\\">\\r\\n                                <label>Senha</label>\\r\\n                                <div class=\\\"suffix ui-button flat icon\\\" (click)=\\\"typeText = !typeText\\\" uiRipple>\\r\\n                                    <i class=\\\"material-icons light\\\">{{typeText ? 'visibility_off' : 'visibility'}}</i>\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-messages\\\">\\r\\n                                    <div *ngIf=\\\"loginSenha.errors && loginSenha.dirty\\\">\\r\\n                                        <div class=\\\"ui-message error\\\" [hidden]=\\\"!loginSenha.pristine && !loginSenha.errors.required\\\">\\r\\n                                            Insira uma senha\\r\\n                                        </div>\\r\\n                                        <div class=\\\"ui-message error\\\" [hidden]=\\\"!loginSenha.errors.wrongPassword\\\">\\r\\n                                            Senha incorreta\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"ui-message counter\\\">\\r\\n                                        Esqueci minha senha\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </ui-input-container>\\r\\n                            <ui-option class=\\\"primary\\\" style=\\\"margin-top: 16px\\\">\\r\\n                                <input type=\\\"checkbox\\\"\\r\\n                                       [checked]=\\\"info.matenhaConectado\\\"\\r\\n                                       (change)=\\\"info.matenhaConectado = $event.target.checked\\\">\\r\\n                                <span>Manter conectado</span>\\r\\n                            </ui-option>\\r\\n                        </ui-card-content>\\r\\n                        <div class=\\\"ui-button-container cover\\\">\\r\\n                            <button class=\\\"ui-button accent full\\\" uiRipple>Login</button>\\r\\n                        </div>\\r\\n                    </fieldset>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"page bloqueado\\\">\\r\\n                <ui-toolbar class=\\\"flat\\\">\\r\\n                    <button class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple (click)=\\\"tabsPages.pagesGoToPage(1)\\\">\\r\\n                        <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n                    </button>\\r\\n                </ui-toolbar>\\r\\n                <ui-card-content>\\r\\n                    <div>{{info.nome}}, seu usuário está bloqueado.</div>\\r\\n                </ui-card-content>\\r\\n            </div>\\r\\n            <div class=\\\"page bloqueado-por-horario\\\">\\r\\n                <ui-toolbar class=\\\"flat\\\">\\r\\n                    <button class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple (click)=\\\"tabsPages.pagesGoToPage(1)\\\">\\r\\n                        <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n                    </button>\\r\\n                </ui-toolbar>\\r\\n                <ui-card-content>\\r\\n                    <div>{{info.nome}}, você está bloqueado à acessar neste horário.</div>\\r\\n                </ui-card-content>\\r\\n            </div>\\r\\n            <div class=\\\"page senha-expirada\\\">\\r\\n                <ui-toolbar class=\\\"flat\\\">\\r\\n                    <button class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple (click)=\\\"tabsPages.pagesGoToPage(1)\\\">\\r\\n                        <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n                    </button>\\r\\n                </ui-toolbar>\\r\\n                <form #senhaExpiradaForm=\\\"ngForm\\\" class=\\\"ui-validate on-submit on-dirty\\\" (submit)=\\\"redefinirSenha(senhaExpiradaForm, senhaExpirada)\\\">\\r\\n                    <ui-card-content>\\r\\n                        <div class=\\\"info-text secondary-text\\\">{{senhaExpirada.nome}}, por motivos de segurança expiramos sua senha. Por favor crie uma nova.</div>\\r\\n                        <ui-input-container>\\r\\n                            <input [type]=\\\"senhaExpirada.typeTextSenhaAntiga ? 'text' : 'password'\\\"\\r\\n                                   [(ngModel)]=\\\"senhaExpirada.senha\\\"\\r\\n                                   uiInput\\r\\n                                   required\\r\\n                                   name=\\\"senhaAntiga\\\"\\r\\n                                   #senhaExpiradaAntiga=\\\"ngModel\\\"\\r\\n                                   id=\\\"senha-antiga\\\"\\r\\n                                   class=\\\"accent\\\">\\r\\n                            <label>Senha antiga</label>\\r\\n                            <div class=\\\"suffix ui-button flat icon\\\" (click)=\\\"senhaExpirada.typeTextSenhaAntiga = !senhaExpirada.typeTextSenhaAntiga\\\" uiRipple>\\r\\n                                <i class=\\\"material-icons light\\\">{{senhaExpirada.typeTextSenhaAntiga ? 'visibility_off' : 'visibility'}}</i>\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-messages\\\">\\r\\n                                <div *ngIf=\\\"senhaExpiradaAntiga.errors && senhaExpiradaAntiga.dirty\\\">\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!senhaExpiradaAntiga.pristine && !senhaExpiradaAntiga.errors.required\\\">\\r\\n                                        Insira uma senha\\r\\n                                    </div>\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!senhaExpiradaAntiga.errors.wrongPassword\\\">\\r\\n                                        Senha incorreta\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ui-input-container>\\r\\n                        <ui-input-container>\\r\\n                            <input [type]=\\\"senhaExpirada.typeTextNovaSenha ? 'text' : 'password'\\\"\\r\\n                                   [(ngModel)]=\\\"senhaExpirada.novaSenha\\\"\\r\\n                                   uiInput\\r\\n                                   required\\r\\n                                   name=\\\"novaSenha\\\"\\r\\n                                   #senhaExpiradaNovaSenha=\\\"ngModel\\\"\\r\\n                                   (ngModelChange)=\\\"validarSenhasDivergentes(senhaExpiradaForm)\\\"\\r\\n                                   id=\\\"nova-senha\\\"\\r\\n                                   class=\\\"accent\\\">\\r\\n                            <label>Nova senha</label>\\r\\n                            <div class=\\\"suffix ui-button flat icon\\\" (click)=\\\"senhaExpirada.typeTextNovaSenha = !senhaExpirada.typeTextNovaSenha\\\" uiRipple>\\r\\n                                <i class=\\\"material-icons light\\\">{{senhaExpirada.typeTextNovaSenha ? 'visibility_off' : 'visibility'}}</i>\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-messages\\\">\\r\\n                                <div *ngIf=\\\"senhaExpiradaNovaSenha.errors && senhaExpiradaNovaSenha.dirty\\\">\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!senhaExpiradaNovaSenha.pristine && !senhaExpiradaNovaSenha.errors.required\\\">\\r\\n                                        Insira uma senha\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ui-input-container>\\r\\n                        <ui-input-container>\\r\\n                            <input [type]=\\\"senhaExpirada.typeTextConfirmacaoNovaSenha ? 'text' : 'password'\\\"\\r\\n                                   [(ngModel)]=\\\"senhaExpirada.confirmacaoNovaSenha\\\"\\r\\n                                   uiInput\\r\\n                                   required\\r\\n                                   name=\\\"confirmacaoSenha\\\"\\r\\n                                   #senhaExpiradaConfirmacaoNovaSenha=\\\"ngModel\\\"\\r\\n                                   (ngModelChange)=\\\"validarSenhasDivergentes(senhaExpiradaForm)\\\"\\r\\n                                   id=\\\"confirmacao-nova-senha\\\"\\r\\n                                   class=\\\"accent\\\">\\r\\n                            <label>Confirmação de senha</label>\\r\\n                            <div class=\\\"suffix ui-button flat icon\\\" (click)=\\\"senhaExpirada.typeTextConfirmacaoNovaSenha = !senhaExpirada.typeTextConfirmacaoNovaSenha\\\" uiRipple>\\r\\n                                <i class=\\\"material-icons light\\\">{{senhaExpirada.typeTextConfirmacaoNovaSenha ? 'visibility_off' : 'visibility'}}</i>\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-messages\\\">\\r\\n                                <div *ngIf=\\\"senhaExpiradaConfirmacaoNovaSenha.errors && senhaExpiradaConfirmacaoNovaSenha.dirty\\\">\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!senhaExpiradaConfirmacaoNovaSenha.pristine && !senhaExpiradaConfirmacaoNovaSenha.errors.required\\\">\\r\\n                                        Insira uma senha\\r\\n                                    </div>\\r\\n                                    <div class=\\\"ui-message error\\\" [hidden]=\\\"!senhaExpiradaConfirmacaoNovaSenha.errors.notEqual\\\">\\r\\n                                        As senhas não conferem\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ui-input-container>\\r\\n                    </ui-card-content>\\r\\n                    <div class=\\\"ui-button-container cover\\\">\\r\\n                        <button class=\\\"ui-button accent full\\\" uiRipple>Redefinir senha</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </ui-tabs-pages>\\r\\n    </ui-card>\\r\\n</div>\\r\\n\"","module.exports = \"/* https://material.io/guidelines/motion/duration-easing.html#duration-easing-natural-easing-curves */\\n/* Inspired by https://github.com/nilskaspersson/Google-Material-UI-Color-Palette */\\n/* https://material.io/guidelines/resources/shadows.html */\\n/deep/ app-root, :host {\\n  height: 100%; }\\n:host {\\n  background: url(\\\"/assets/images/login-background.jpg\\\") center;\\n  background-size: cover;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n:host > .core {\\n    max-width: 420px;\\n    width: 100%; }\\n:host > .core .logo {\\n      width: 280px; }\\n:host > .core ui-card {\\n      position: relative;\\n      overflow: hidden; }\\n:host > .core ui-card .ui-progress {\\n        position: absolute; }\\n:host > .core ui-card ui-card-title {\\n        font-size: 18px;\\n        padding: 32px 32px 0; }\\n:host > .core ui-card .ui-list li {\\n        padding: 0 24px; }\\n:host > .core ui-card ui-card-content {\\n        padding: 32px; }\\n:host > .core ui-card .ui-button-container {\\n        padding: 0 32px 32px; }\\n:host > .core ui-card .senha-expirada ui-card-content, :host > .core ui-card .bloqueado ui-card-content, :host > .core ui-card .bloqueado-por-horario ui-card-content {\\n        padding-top: 16px; }\\n:host > .core ui-card .senha-expirada .info-text, :host > .core ui-card .bloqueado .info-text, :host > .core ui-card .bloqueado-por-horario .info-text {\\n        margin-bottom: 24px; }\\n\"","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { UiColor, UiSnackbar } from 'ng-smn-ui';\r\nimport { ApiService } from '../../../core/api/api.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { UserService } from '../../../core/utils/user/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n\r\n    headers: any;\r\n    preLogin: any;\r\n    info: any;\r\n    typeText: boolean;\r\n    loading: boolean;\r\n    authByEmail: boolean;\r\n    senhaExpirada: any;\r\n\r\n    @ViewChild('tabsPages') tabsPages;\r\n    @ViewChild('loginForm') loginForm;\r\n\r\n\r\n    constructor(private titleService: Title,\r\n        private router: Router,\r\n        private element: ElementRef,\r\n        private api: ApiService) {\r\n        this.preLogin = {};\r\n        this.info = {\r\n            matenhaConectado: true\r\n        };\r\n        this.senhaExpirada = {};\r\n        this.authByEmail = environment.AUTH_BY_EMAIL;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.headers = { 'Content-Type': 'application/json' };\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.titleService.setTitle('Cronos - Login');\r\n    }\r\n\r\n    isBright(color: string) {\r\n        return UiColor.isBright(color);\r\n    }\r\n\r\n    getInfo(form, info) {\r\n        console.log(info);\r\n\r\n        if (form.invalid || this.loading) {\r\n            form.controls.usuario.markAsTouched();\r\n            form.controls.usuario.markAsDirty();\r\n            this.focusElement('#pre-login-usuario');\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.api\r\n            .http('POST', `${environment.AUTH_API}/login/dados`, { headers: this.headers })\r\n            .call({ login: info.usuario })\r\n            .subscribe(res => {\r\n                res.content.user = Object.assign(res.content.user, {\r\n                    usuario: info.usuario,\r\n                    matenhaConectado: true\r\n                });\r\n\r\n                this.info = res.content.user;\r\n                this.tabsPages.pagesGoToPage(2);\r\n                this.focusElement('#login-senha', true);\r\n                this.loginForm.reset();\r\n            }, (res) => {\r\n                switch (res._status) {\r\n                    case 404:\r\n                        form.controls.usuario.setErrors({ notFound: true });\r\n                        break;\r\n                }\r\n            }, () => {\r\n                this.loading = false;\r\n            });\r\n\r\n    }\r\n\r\n    login(form, info) {\r\n        const elementPassword = this.element.nativeElement.querySelector('#login-senha');\r\n\r\n        if (form.invalid || this.loading) {\r\n            form.controls.senha.markAsTouched();\r\n            form.controls.senha.markAsDirty();\r\n            elementPassword.focus();\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this.api\r\n            .http('POST', `${environment.AUTH_API}/login`, { headers: this.headers })\r\n            .call({ login: info.usuario, senha: info.senha })\r\n            .subscribe(res => {\r\n                const content = res.content;\r\n                this.api.set(content.api, content.opcoes);\r\n                UserService.setToken(content.token, info.matenhaConectado);\r\n                UserService.setMenu(content.user.opcoes);\r\n                UserService.setUser(content.user);\r\n                this.router.navigate(['/']);\r\n            }, (res) => {\r\n                switch (res.status) {\r\n                    case 401:\r\n                        switch (res.error.executionCode) {\r\n                            case 2:\r\n                                form.controls.senha.setErrors({ wrongPassword: true });\r\n                                elementPassword.focus();\r\n                                break;\r\n                            case 3:\r\n                                this.tabsPages.pagesGoToPage(3);\r\n                                form.reset();\r\n                                break;\r\n                            case 4:\r\n                                this.senhaExpirada = Object.assign({}, info);\r\n                                delete this.senhaExpirada.senha;\r\n                                this.focusElement('#senha-antiga', true);\r\n                                this.tabsPages.pagesGoToPage(5);\r\n                                form.reset();\r\n                                break;\r\n                            case 5:\r\n                                this.tabsPages.pagesGoToPage(4);\r\n                                form.reset();\r\n                                break;\r\n                        }\r\n                        break;\r\n                }\r\n            }, () => {\r\n                this.loading = false;\r\n            });\r\n    }\r\n\r\n    redefinirSenha(form, info) {\r\n        if (form.invalid || this.loading) {\r\n            ['senhaAntiga', 'novaSenha', 'confirmacaoSenha'].forEach(field => {\r\n                form.controls[field].markAsTouched();\r\n                form.controls[field].markAsDirty();\r\n            });\r\n            this.element.nativeElement.querySelector('.senha-expirada input.ng-invalid').focus();\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n\r\n        this.api\r\n            .http('POST', `${environment.AUTH_API}/login/alterar-senha`, { headers: this.headers })\r\n            .call({\r\n                login: info.usuario,\r\n                senha: info.senha,\r\n                novaSenha: info.novaSenha,\r\n                confirmacaoNovaSenha: info.confirmacaoNovaSenha,\r\n            })\r\n            .subscribe(res => {\r\n                this.tabsPages.pagesGoToPage(2);\r\n                setTimeout(() => {\r\n                    this.senhaExpirada = {};\r\n                    form.reset();\r\n                }, 280);\r\n            }, (res) => {\r\n                switch (res._status) {\r\n                    case 400:\r\n                        this.validarSenhasDivergentes(form);\r\n                        break;\r\n                    case 401:\r\n                        form.controls.senhaAntiga.setErrors({ wrongPassword: true });\r\n                        this.focusElement('#senha-antiga');\r\n                        break;\r\n                    case 404:\r\n                        UiSnackbar.show({\r\n                            text: 'Não conseguimos encontrar seu usuário',\r\n                            actionText: 'Refazer login',\r\n                            action: close => {\r\n                                this.tabsPages.pagesGoToPage(1);\r\n                                form.reset();\r\n                                close();\r\n                            }\r\n                        });\r\n                        break;\r\n                }\r\n            }, () => {\r\n                this.loading = false;\r\n            });\r\n    }\r\n\r\n    validarSenhasDivergentes(form) {\r\n        if (this.senhaExpirada.novaSenha !== this.senhaExpirada.confirmacaoNovaSenha) {\r\n            setTimeout(() => form.controls.confirmacaoSenha.setErrors({ notEqual: true }));\r\n        }\r\n    }\r\n\r\n    focusElement(selector, withDelay?) {\r\n        setTimeout(() => {\r\n            this.element.nativeElement.querySelector(selector).focus();\r\n        }, withDelay ? 280 : 0);\r\n    }\r\n\r\n    backToLogin() {\r\n        this.tabsPages.pagesGoToPage(1);\r\n        this.focusElement('#pre-login-usuario');\r\n    }\r\n\r\n\r\n}\r\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\r\nimport {LoginComponent} from './login.component';\r\nimport {SharedModule} from \"../../../shared.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [LoginComponent],\r\n    providers: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class LoginModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {NotFoundModule} from './not-found/not-found.module';\r\nimport {InternalModule} from './internal/internal.module';\r\nimport {ForbiddenModule} from \"./forbidden/forbidden.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        NotFoundModule,\r\n        InternalModule,\r\n        ForbiddenModule\r\n    ],\r\n    exports: [],\r\n    declarations: [],\r\n    providers: [],\r\n})\r\nexport class ErrorModule {\r\n}\r\n","import {Routes} from \"@angular/router\";\r\nimport {NotFoundComponent} from \"./not-found/not-found.component\";\r\nimport {InternalComponent} from \"./internal/internal.component\";\r\nimport {ForbiddenComponent} from \"./forbidden/forbidden.component\";\r\n\r\nexport const ERROR_ROUTES: Routes = [\r\n    {path: 'internal', component: InternalComponent},\r\n    {path: 'not-found', component: NotFoundComponent},\r\n    {path: 'forbidden', component: ForbiddenComponent},\r\n    {path: '**', redirectTo: 'not-found'}\r\n];\r\n","module.exports = \"<p>Forbidden error</p>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-forbidden',\r\n    templateUrl: './forbidden.component.html',\r\n    styleUrls: ['./forbidden.component.scss']\r\n})\r\nexport class ForbiddenComponent implements OnInit {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {ForbiddenComponent} from './forbidden.component';\r\nimport {SharedModule} from \"../../../shared.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [ForbiddenComponent],\r\n    providers: [],\r\n})\r\nexport class ForbiddenModule {\r\n}\r\n","module.exports = \"<p>Internal error</p>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-internal',\r\n    templateUrl: './internal.component.html',\r\n    styleUrls: ['./internal.component.scss']\r\n})\r\nexport class InternalComponent implements OnInit {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {InternalComponent} from './internal.component';\r\nimport {SharedModule} from \"../../../shared.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [InternalComponent],\r\n    providers: [],\r\n})\r\nexport class InternalModule {\r\n}\r\n","module.exports = \"<p>Error 404</p>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-not-found',\r\n    templateUrl: './not-found.component.html',\r\n    styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {NotFoundComponent} from './not-found.component';\r\nimport {SharedModule} from \"../../../shared.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [NotFoundComponent],\r\n    providers: [],\r\n})\r\nexport class NotFoundModule {\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { UiToolbarService } from 'ng-smn-ui';\r\n\r\n@Component({\r\n    selector: 'aluno-component',\r\n    templateUrl: 'aluno.component.html',\r\n    styleUrls: []\r\n})\r\n\r\nexport class AlunoComponent implements OnInit {\r\n\r\n    constructor(\r\n        private titleService: Title,\r\n        private toolbarService: UiToolbarService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('Alunos');\r\n        this.toolbarService.set('Alunos');\r\n    }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { SharedModule } from '../../../shared.module';\r\nimport { AlunoComponent } from './aluno.component';\r\nimport { AlunoListComponent } from './list/aluno-list.component';\r\nimport { AlunoInfoComponent } from './info/aluno-info.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [AlunoComponent, AlunoListComponent, AlunoInfoComponent],\r\n    providers: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AlunoModule { }\r\n","module.exports = \"<div class=\\\"ui-s600\\\">\\r\\n    <ui-card class=\\\"elevate-on-toolbar\\\">\\r\\n        <ui-toolbar class=\\\"flat\\\">\\r\\n            <button class=\\\"ui-button flat icon\\\" uiRipple (click)=\\\"router.navigate(['aluno'])\\\">\\r\\n                <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n            </button>\\r\\n            <span class=\\\"title\\\">{{addingNew ? 'Novo aluno' : 'Alterando ' + (info.nome || 'aluno')}}</span>\\r\\n            <div class=\\\"align-right\\\">\\r\\n                <button *ngIf=\\\"!addingNew\\\" class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple [uiMenuTrigger]=\\\"menuDelete\\\" align=\\\"right\\\">\\r\\n                    <i class=\\\"material-icons\\\">delete</i>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ui-toolbar>\\r\\n\\r\\n        <ui-card-content>\\r\\n            <form #formAluno=\\\"ngForm\\\" class=\\\"ui-validate on-dirty on-submit\\\" (submit)=\\\"onSubmit(formAluno)\\\">\\r\\n                <div class=\\\"ui-flex-container breake-on-s600\\\">\\r\\n                    <ui-input-container>\\r\\n                        <input #campoCodigo=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.codigo\\\" name=\\\"campoCodigo\\\" uiInput required readonly>\\r\\n                        <label>Código do aluno</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoCodigo.errors && campoCodigo.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCodigo.pristine && !campoCodigo.errors.required\\\">Código é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCodigo.errors.parse\\\">Informe um código válido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n\\r\\n                    <ui-input-container>\\r\\n                        <input #campoCpf=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.cpf\\\" name=\\\"campoCpf\\\" (blur)=\\\"verificaCpf(info.cpf)\\\" uiInput required\\r\\n                            uiMaskCpf>\\r\\n                        <label>CPF</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoCpf.errors && campoCpf.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCpf.pristine && !campoCpf.errors.required\\\">CPF é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCpf.errors.parse\\\">Informe um CPF válido\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCpf.errors.cpfExistente\\\">CPF já cadastrado\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <ui-input-container>\\r\\n                    <input #campoNome=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.nome\\\" name=\\\"campoNome\\\" uiInput required uiMaxlength=\\\"70\\\">\\r\\n                    <label>Nome</label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoNome.errors && campoNome.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoNome.pristine && !campoNome.errors.required\\\">Nome é obrigatório\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoNome.errors.uiMaxlength\\\">Nome não pode conter mais de 70 caracteres.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-message counter\\\" [ngClass]=\\\"{'error': info.nome && info.nome.length > 70}\\\">\\r\\n                            {{info.nome ? info.nome.length : 0}}/70\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n\\r\\n                <ui-input-container>\\r\\n                    <input #campoEmail=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.email\\\" name=\\\"campoEmail\\\" uiInput required uiMaxlength=\\\"252\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\">\\r\\n                    <label>Email</label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoEmail.errors && campoEmail.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoEmail.pristine && !campoEmail.errors.required\\\">Email é obrigatório\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoEmail.pristine && !campoEmail.errors.pattern\\\">Informe um email válido\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoEmail.errors.uiMaxlength\\\">Email não pode conter mais de 252 caracteres.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-message counter\\\" [ngClass]=\\\"{'error': info.email && info.email.length > 252}\\\">\\r\\n                            {{info.email ? info.email.length : 0}}/252\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n                <div class=\\\"ui-flex-container break-on-s600\\\">\\r\\n                    <ui-input-container>\\r\\n                        <input type=\\\"text\\\" uiInput [(ngModel)]=\\\"info.dataNascimento\\\" name=\\\"date\\\" [uiDatePicker]=\\\"'dataNascimento'\\\" uiMaskDate #DataNascimento=\\\"ngModel\\\"\\r\\n                            required>\\r\\n                        <label>Data de Nascimento</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"DataNascimento.errors && DataNascimento.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!DataNascimento.errors.required\\\">\\r\\n                                    Data de nascimento é obrigatória\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!DataNascimento.errors.parse\\\">\\r\\n                                    Informe uma data válida\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"icon\\\">\\r\\n                            <button class=\\\"ui-button icon flat\\\" [uiDatePickerCaller]=\\\"'dataNascimento'\\\" type=\\\"button\\\">\\r\\n                                <i class=\\\"material-icons\\\">today</i>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n\\r\\n                    <ui-input-container>\\r\\n                        <ui-select #campoCurso=\\\"ngModel\\\" name=\\\"campoCurso\\\" [(ngModel)]=\\\"info.curso\\\" [options]=\\\"cursos\\\" [value]=\\\"'codigo'\\\" [label]=\\\"'nome'\\\"\\r\\n                            uiInput required [chosen]=\\\"cursos.length > 10\\\"></ui-select>\\r\\n                        <label>\\r\\n                            Curso\\r\\n                        </label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoCurso.errors && campoCurso.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCurso.errors.required\\\">\\r\\n                                    Curso é obrigatório\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                </div>\\r\\n\\r\\n                <ui-subheader>Endereço</ui-subheader>\\r\\n\\r\\n                <div class=\\\"ui-flex-container break-on-s600\\\">\\r\\n                    <ui-input-container>\\r\\n                        <input #campoCepCartao=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.cep\\\" uiInput name=\\\"campoCepCartao\\\" uiMaskCep required (blur)=\\\"getCep(formAluno, info.cep)\\\">\\r\\n                        <label>CEP</label>\\r\\n                        <div class=\\\"icon\\\">\\r\\n                            <button class=\\\"ui-button icon flat\\\" type=\\\"button\\\" (click)=\\\"getCep(formAluno, info.cep)\\\" uiRipple [disabled]=\\\"campoCepCartao.errors || !campoCepCartao.dirty\\\">\\r\\n                                <ui-progress-radial class=\\\"indeterminate primary\\\" *ngIf=\\\"buscandoCep\\\"></ui-progress-radial>\\r\\n                                <i class=\\\"material-icons\\\">search</i>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoCepCartao.errors && campoCepCartao.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCepCartao.pristine && !campoCepCartao.errors.required\\\">\\r\\n                                    CEP é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCepCartao.errors.parse && !campoCepCartao.hasError(['invalidCep'])\\\">\\r\\n                                    CEP inválido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                    <ui-input-container>\\r\\n                        <ui-select #campoEstadoCartao=\\\"ngModel\\\" name=\\\"campoEstadoCartao\\\" [(ngModel)]=\\\"info.uf\\\" [options]=\\\"estados\\\" value=\\\"uf\\\" label=\\\"nome\\\"\\r\\n                            uiInput required [chosen]=\\\"true\\\"></ui-select>\\r\\n                        <label>\\r\\n                            Estado\\r\\n                        </label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoEstadoCartao.errors && campoEstadoCartao.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoEstadoCartao.errors.required\\\">\\r\\n                                    Estado é obrigatório\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                </div>\\r\\n                <div class=\\\"ui-flex-container break-on-s600\\\">\\r\\n                    <ui-input-container>\\r\\n                        <input #campoCidade=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.cidade\\\" uiInput name=\\\"campoCidade\\\" required uiMaxlength=\\\"50\\\">\\r\\n                        <label>Cidade</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoCidade.errors && campoCidade.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCidade.pristine && !campoCidade.errors.required\\\">\\r\\n                                    Cidade é obrigatória\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message counter error\\\" [hidden]=\\\"!campoCidade.errors.uiMaxlength\\\">\\r\\n                                    {{info.cidade ? info.cidade.length : 0}}/50\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                    <ui-input-container>\\r\\n                        <input #campoLogradouro=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.logradouro\\\" uiInput name=\\\"campoLogradouro\\\" required uiMaxlength=\\\"70\\\">\\r\\n                        <label>Logradouro</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoLogradouro.errors && campoLogradouro.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoLogradouro.pristine && !campoLogradouro.errors.required\\\">\\r\\n                                    Logradouro é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message counter error\\\" [hidden]=\\\"!campoLogradouro.errors.uiMaxlength\\\">\\r\\n                                    {{info.logradouro ? info.logradouro.length : 0}}/70\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                </div>\\r\\n                <div class=\\\"ui-flex-container break-on-s600\\\">\\r\\n                    <ui-input-container>\\r\\n                        <input #campoNumeroEnd=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.numero\\\" uiInput name=\\\"campoNumeroEnd\\\" required uiMaxlength=\\\"15\\\">\\r\\n                        <label>Número</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoNumeroEnd.errors && campoNumeroEnd.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoNumeroEnd.pristine && !campoNumeroEnd.errors.required\\\">\\r\\n                                    Número é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message counter error\\\" [hidden]=\\\"!campoNumeroEnd.errors.uiMaxlength\\\">\\r\\n                                    {{info.numero ? info.numero.length : 0}}/15\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n\\r\\n                    <ui-input-container>\\r\\n                        <input #campoBairroCartao=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.bairro\\\" uiInput name=\\\"campoBairroCartao\\\" required uiMaxlength=\\\"50\\\">\\r\\n                        <label>Bairro</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoBairroCartao.errors && campoBairroCartao.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoBairroCartao.pristine && !campoBairroCartao.errors.required\\\">\\r\\n                                    Bairro é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message counter error\\\" [hidden]=\\\"!campoBairroCartao.errors.uiMaxlength\\\">\\r\\n                                    {{info.bairro ? info.bairro.length : 0}}/50\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"ui-fab-container\\\">\\r\\n                    <button class=\\\"ui-button accent fab\\\" uiRipple>\\r\\n                        <i class=\\\"material-icons\\\">save</i>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </ui-card-content>\\r\\n    </ui-card>\\r\\n</div>\\r\\n\\r\\n<ui-menu #menuDelete>\\r\\n    <div class=\\\"ui-menu-content size-2x\\\">\\r\\n        <ui-subheader>Deseja excluir?</ui-subheader>\\r\\n        <div class=\\\"ui-menu-item\\\" uiRipple (click)=\\\"confirmDelete()\\\">\\r\\n            Sim\\r\\n        </div>\\r\\n        <div class=\\\"ui-menu-item\\\" uiRipple>\\r\\n            Não\\r\\n        </div>\\r\\n    </div>\\r\\n</ui-menu>\"","module.exports = \":host ui-card {\\n  margin-bottom: 16px; }\\n  @media (max-width: 760px) {\\n    :host ui-card {\\n      margin-bottom: 85px; } }\\n\"","import { Component, OnInit, OnDestroy, ElementRef, ViewChild } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { UiToolbarService, UiElement, UiSnackbar } from 'ng-smn-ui';\r\nimport { StorageService } from '../../../../core/utils/storage.service';\r\nimport { ListService } from '../../../../core/utils/list.service';\r\nimport { Router, Route, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from '../../../../core/api/api.service';\r\n\r\n@Component({\r\n    selector: 'aluno-info-component',\r\n    templateUrl: 'aluno-info.component.html',\r\n    styleUrls: ['aluno-info.component.scss']\r\n})\r\n\r\nexport class AlunoInfoComponent implements OnInit, OnDestroy {\r\n    info: any;\r\n    addingNew: boolean;\r\n    index: number;\r\n    estados: any;\r\n    buscandoCep: boolean;\r\n    cursos: Array<any>;\r\n    listaAluno: ListService;\r\n    listaCursos: ListService;\r\n    @ViewChild('formAluno') formAluno;\r\n    constructor(\r\n        private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        private storageService: StorageService,\r\n        private element: ElementRef,\r\n        private router: Router,\r\n        private activedRoute: ActivatedRoute,\r\n        private api: ApiService\r\n    ) {\r\n        this.info = {};\r\n        this.estados = [];\r\n        this.cursos = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('UnifaSystem - Alunos');\r\n        this.toolbarService.set('Alunos');\r\n        this.toolbarService.activateExtendedToolbar(600);\r\n        this.listaAluno = new ListService();\r\n        this.listaCursos = new ListService();\r\n        this.getLista();\r\n\r\n        this.getListaDisciplinas().then(() => {\r\n            let current = this.listaCursos.getHead();\r\n\r\n            for (let i = 0; i < this.listaCursos.size(); i++) {\r\n                this.cursos.push(current.element);\r\n                current = current.next;\r\n            }\r\n        }, () => {\r\n            UiSnackbar.show({\r\n                text: 'Não foi possível carregar os cursos'\r\n            });\r\n            this.router.navigate(['aluno']);\r\n        });\r\n\r\n        this.getEstados();\r\n\r\n        setTimeout(() => {\r\n            if (this.activedRoute.snapshot.params['id']) {\r\n                setTimeout(() => {\r\n                    this.addingNew = false;\r\n                });\r\n                const res = this.listaAluno.contains('codigo', this.activedRoute.snapshot.params['id']);\r\n                this.info = res.element;\r\n                this.index = res.index;\r\n                this.info.codigo = parseInt(this.info.codigo, 10);\r\n            } else {\r\n                setTimeout(() => {\r\n                    this.addingNew = true;\r\n                });\r\n                this.getCodigo();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.toolbarService.deactivateExtendedToolbar();\r\n    }\r\n\r\n    onSubmit(form) {\r\n        for (const control in form.controls) {\r\n            if (form.controls.hasOwnProperty(control)) {\r\n                form.controls[control].markAsTouched();\r\n                form.controls[control].markAsDirty();\r\n            }\r\n        }\r\n\r\n        if (!form.valid) {\r\n            UiElement.focus(this.element.nativeElement.querySelector('form .ng-invalid'));\r\n            return false;\r\n        }\r\n\r\n        if (!this.addingNew) {\r\n            this.listaAluno.remove(this.listaAluno.contains('codigo', this.info.codigo).index);\r\n        }\r\n        this.listaAluno.append(this.info);\r\n\r\n        const head = this.listaAluno.getHead();\r\n        this.storageService.setNewItem('alunos', JSON.stringify(head));\r\n\r\n        UiSnackbar.show({\r\n            text: 'Aluno ' + (this.addingNew ? 'cadastrado' : 'alterado') + ' com sucesso!'\r\n        });\r\n\r\n        this.router.navigate(['aluno']);\r\n    }\r\n\r\n    getLista() {\r\n        const storage = this.storageService.getItem('alunos');\r\n        if (storage) {\r\n            const objectStorage = JSON.parse(storage);\r\n            this.listaAluno.setHead(objectStorage);\r\n            this.listaAluno.setSize();\r\n        }\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.listaAluno.remove(this.index);\r\n\r\n        if (!this.listaAluno.size()) {\r\n            this.storageService.removeItem('alunos');\r\n        } else {\r\n            const head = this.listaAluno.getHead();\r\n            this.storageService.setNewItem('alunos', JSON.stringify(head));\r\n        }\r\n        \r\n        UiSnackbar.show({\r\n            text: 'Aluno removido com sucesso'\r\n        });\r\n\r\n        this.router.navigate(['aluno']);\r\n    }\r\n\r\n\r\n    getEstados() {\r\n        this.estados = [\r\n            { uf: 'AC', nome: 'Acre' },\r\n            { uf: 'AL', nome: 'Alagoas' },\r\n            { uf: 'AP', nome: 'Amapá' },\r\n            { uf: 'AM', nome: 'Amazonas' },\r\n            { uf: 'BA', nome: 'Bahia' },\r\n            { uf: 'CE', nome: 'Ceará' },\r\n            { uf: 'DF', nome: 'Distrito Federal' },\r\n            { uf: 'ES', nome: 'Espírito Santo' },\r\n            { uf: 'GO', nome: 'Goiás' },\r\n            { uf: 'MA', nome: 'Maranhão' },\r\n            { uf: 'MT', nome: 'Mato Grosso' },\r\n            { uf: 'MS', nome: 'Mato Grosso do Sul' },\r\n            { uf: 'MG', nome: 'Minas Gerais' },\r\n            { uf: 'PA', nome: 'Pará' },\r\n            { uf: 'PB', nome: 'Paraíba' },\r\n            { uf: 'PR', nome: 'Paraná' },\r\n            { uf: 'PE', nome: 'Pernambuco' },\r\n            { uf: 'PI', nome: 'Piauí' },\r\n            { uf: 'RJ', nome: 'Rio de Janeiro' },\r\n            { uf: 'RN', nome: 'Rio Grande do Norte' },\r\n            { uf: 'RS', nome: 'Rio Grande do Sul' },\r\n            { uf: 'RO', nome: 'Rondônia' },\r\n            { uf: 'RR', nome: 'Roraima' },\r\n            { uf: 'SC', nome: 'Santa Catarina' },\r\n            { uf: 'SP', nome: 'São Paulo' },\r\n            { uf: 'SE', nome: 'Sergipe' },\r\n            { uf: 'TO', nome: 'Tocantins' }\r\n        ];\r\n    }\r\n\r\n    getListaDisciplinas() {\r\n        return new Promise((resolve, reject) => {\r\n            const storage = this.storageService.getItem('cursos');\r\n            if (storage) {\r\n                const objectStorage = JSON.parse(storage);\r\n                this.listaCursos.setHead(objectStorage);\r\n                this.listaCursos.setSize();\r\n                resolve();\r\n            } else {\r\n                reject();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    getCodigo() {\r\n        if (!this.listaAluno.size()) {\r\n            this.info.codigo = 1000;\r\n        } else {\r\n            let current = this.listaAluno.getHead();\r\n            while (current.next) {\r\n                current = current.next;\r\n            }\r\n            this.info.codigo = parseInt(current.element.codigo, 10) + 1;\r\n        }\r\n    }\r\n\r\n    getCep(form, value) {\r\n        if (!this.buscandoCep) {\r\n            this.buscandoCep = true;\r\n\r\n            this.api\r\n                .http('GET', `https://viacep.com.br/ws/${value}/json/`)\r\n                .call()\r\n                .subscribe((res) => {\r\n                    if (!res.erro) {\r\n                        this.info.bairro = res.bairro;\r\n                        this.info.logradouro = res.logradouro;\r\n                        this.info.uf = res.uf;\r\n                        this.info.cidade = res.localidade;\r\n                    } else {\r\n                        form.controls.campoCepCartao.setErrors({ invalidCep: true });\r\n                        this.info.bairro = '';\r\n                        this.info.logradouro = '';\r\n                        this.info.uf = null;\r\n                        this.info.cidade = '';\r\n                    }\r\n\r\n                }, (err) => {\r\n                    console.log(err);\r\n                }, () => {\r\n                    this.buscandoCep = false;\r\n                });\r\n        }\r\n    }\r\n\r\n    verificaCpf(value) {\r\n        if (this.listaAluno.size()) {\r\n            let current = this.listaAluno.getHead();\r\n            for (let i = 0; i < this.listaAluno.size(); i++) {\r\n                if ((!this.activedRoute.snapshot.params.id || current.element.codigo != this.activedRoute.snapshot.params.id) && current.element.cpf === value) {\r\n                    this.formAluno.controls.campoCpf.setErrors({ cpfExistente: true });\r\n                    return false;\r\n                }\r\n                current = current.next;\r\n            }\r\n            this.formAluno.controls.campoCpf.updateValueAndValidity();\r\n            return true;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"ui-s600\\\">\\r\\n    <ui-card class=\\\"elevate-on-toolbar\\\">\\r\\n        <ui-data-table class=\\\"responsive\\\">\\r\\n            <tbody #elementInsert>\\r\\n                <tr>\\r\\n                    <th>\\r\\n                        Código\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        Nome\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        Curso\\r\\n                    </th>\\r\\n                </tr>\\r\\n                <tr class=\\\"empty\\\" *ngIf=\\\"!listaAluno.size()\\\">\\r\\n                    <td colspan=\\\"3\\\">{{loading ? 'Carregando...' : 'Nenhum aluno cadastrado'}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n            </tfoot>\\r\\n        </ui-data-table>\\r\\n    </ui-card>\\r\\n    <div class=\\\"ui-fab-container\\\">\\r\\n        <button class=\\\"ui-button accent fab\\\" uiRipple [routerLink]=\\\"['novo']\\\">\\r\\n            <i class=\\\"material-icons\\\">add</i>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\r\nimport { ListService } from '../../../../core/utils/list.service';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { UiToolbarService, UiElement, UiSnackbar } from 'ng-smn-ui';\r\nimport { StorageService } from '../../../../core/utils/storage.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'aluno-list-component',\r\n    templateUrl: 'aluno-list.component.html',\r\n    styleUrls: ['aluno-list.component.scss']\r\n})\r\n\r\nexport class AlunoListComponent implements OnInit, OnDestroy {\r\n    listaAluno: ListService;\r\n    listaCursos: ListService;\r\n    elementList: any;\r\n    cursos: Array<any>;\r\n    @ViewChild('elementInsert') elementInsert;\r\n    constructor(\r\n        private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        private element: ElementRef,\r\n        private storageService: StorageService,\r\n        private router: Router\r\n    ) {\r\n        this.cursos = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('UnfaSystem - Alunos');\r\n        this.toolbarService.set('Lista de alunos');\r\n        this.toolbarService.activateExtendedToolbar(480);\r\n\r\n        this.listaAluno = new ListService();\r\n        this.listaCursos = new ListService();\r\n        this.getInfo();\r\n        this.getListaDisciplinas().then(() => {\r\n            let current = this.listaCursos.getHead();\r\n\r\n            for (let i = 0; i < this.listaCursos.size(); i++) {\r\n                this.cursos.push(current.element);\r\n                current = current.next;\r\n            }\r\n\r\n            this.initList(this.listaAluno);\r\n\r\n        }, () => {\r\n            UiSnackbar.show({\r\n                text: 'Não foi possível carregar os cursos'\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.toolbarService.deactivateExtendedToolbar();\r\n    }\r\n\r\n    initList(list) {\r\n        const length = list.size();\r\n        let itemList = list.getHead();\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const node = `<tr class=\"item-list\" data-id=\"${itemList.element.codigo}\">\r\n            <td data-title=\"Código\" class=\"no-wrap\">${itemList.element.codigo}</td>\r\n            <td data-title=\"Nome\" class=\"no-wrap\">${itemList.element.nome}</td>\r\n            <td data-title=\"Curso\" class=\"no-wrap\">${this.getNomeCurso(itemList.element.curso)}</td>\r\n            </tr>`;\r\n            this.elementInsert.nativeElement.innerHTML += node;\r\n            itemList = itemList.next;\r\n        }\r\n\r\n        this.elementList = this.element.nativeElement.querySelectorAll('tr.item-list');\r\n        this.addFunction();\r\n    }\r\n\r\n    addFunction() {\r\n        this.elementList.forEach(el => {\r\n            UiElement.on(el, 'click', (e) => {\r\n                this.router.navigate(['aluno/' + e.target.parentElement.dataset.id]);\r\n            });\r\n        });\r\n    }\r\n\r\n    getInfo() {\r\n        const storage = this.storageService.getItem('alunos');\r\n        if (storage) {\r\n            const objectStorage = JSON.parse(storage);\r\n            this.listaAluno.setHead(objectStorage);\r\n            this.listaAluno.setSize();\r\n        }\r\n    }\r\n\r\n    getListaDisciplinas() {\r\n        return new Promise((resolve, reject) => {\r\n            const storage = this.storageService.getItem('cursos');\r\n            if (storage) {\r\n                const objectStorage = JSON.parse(storage);\r\n                this.listaCursos.setHead(objectStorage);\r\n                this.listaCursos.setSize();\r\n                resolve();\r\n            } else {\r\n                reject();\r\n            }\r\n        });\r\n    }\r\n\r\n    getNomeCurso(codigo: number): any {\r\n        let retorno = '';\r\n        this.cursos.forEach(item => {\r\n            if (item.codigo == codigo) {\r\n                retorno = item.nome;\r\n            }\r\n        });\r\n\r\n        return retorno;\r\n    }\r\n}\r\n\r\n","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { UiToolbarService } from 'ng-smn-ui';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ApiService } from '../../../core/api/api.service';\r\nimport { ListService } from '../../../core/utils/list.service';\r\n\r\n@Component({\r\n    selector: 'curso-component',\r\n    templateUrl: './curso.component.html',\r\n})\r\nexport class CursoComponent implements OnInit {\r\n    constructor(private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        private element: ElementRef) {\r\n    }\r\n\r\n    ngOnInit() { }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { SharedModule } from '../../../shared.module';\r\nimport { CursoComponent } from './curso.component';\r\nimport { CursoListComponent } from './list/curso-list.component';\r\nimport { CursoInfoComponent } from './info/curso-info.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [CursoComponent, CursoListComponent, CursoInfoComponent],\r\n    providers: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class CursoModule {\r\n}\r\n","module.exports = \"<div class=\\\"ui-s480\\\">\\r\\n    <ui-card class=\\\"elevate-on-toolbar\\\">\\r\\n        <ui-toolbar class=\\\"flat\\\">\\r\\n            <button class=\\\"ui-button flat icon\\\" uiRipple (click)=\\\"router.navigate(['curso'])\\\">\\r\\n                <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n            </button>\\r\\n            <span class=\\\"title\\\">{{addingNew ? 'Novo curso' : 'Alterando ' + (info.nome || 'curso')}}</span>\\r\\n            <div class=\\\"align-right\\\">\\r\\n                <button *ngIf=\\\"!addingNew\\\" class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple\\r\\n                        [uiMenuTrigger]=\\\"menuDelete\\\" align=\\\"right\\\">\\r\\n                    <i class=\\\"material-icons\\\">delete</i>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ui-toolbar>\\r\\n\\r\\n        <ui-card-content>\\r\\n            <form #formCurso=\\\"ngForm\\\" class=\\\"ui-validate on-dirty on-submit\\\" (submit)=\\\"onSubmit(formCurso)\\\">\\r\\n                <ui-input-container>\\r\\n                    <input #campoNome=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.nome\\\" name=\\\"campoNome\\\" uiInput required\\r\\n                           uiMaxlength=\\\"70\\\">\\r\\n                    <label>Nome</label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoNome.errors && campoNome.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoNome.pristine && !campoNome.errors.required\\\">\\r\\n                                Nome é obrigatório\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoNome.errors.uiMaxlength\\\">Nome não pode conter\\r\\n                                mais de 70 caracteres.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-message counter\\\" [ngClass]=\\\"{'error': info.nome && info.nome.length > 70}\\\">\\r\\n                            {{info.nome ? info.nome.length : 0}}/70\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n\\r\\n                <ui-input-container>\\r\\n                    <ui-select #campoCoordenador=\\\"ngModel\\\" name=\\\"campoCoordenador\\\" [(ngModel)]=\\\"info.idCoordenador\\\" [options]=\\\"professores\\\" [value]=\\\"'id'\\\" [label]=\\\"'nome'\\\"\\r\\n                               uiInput required></ui-select>\\r\\n                    <label>\\r\\n                        Coordenador\\r\\n                    </label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoCoordenador.errors && campoCoordenador.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCoordenador.errors.required\\\">\\r\\n                                Coordenador é obrigatório\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n\\r\\n                <div class=\\\"ui-flex-container break-on-480\\\">\\r\\n                    <ui-input-container>\\r\\n                        <input #campoValor=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.valor\\\" name=\\\"campoValor\\\" uiInput\\r\\n                               uiMaskCurrency required>\\r\\n                        <label>Valor</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoValor.errors && campoValor.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\"\\r\\n                                     [hidden]=\\\"!campoValor.pristine && !campoValor.errors.required\\\">Valor é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoValor.errors.parse\\\">Informe uma valor\\r\\n                                    válido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                </div>\\r\\n\\r\\n                <ui-input-container>\\r\\n                    <textarea [(ngModel)]=\\\"info.descricao\\\" name=\\\"campoDescricao\\\" rows=\\\"4\\\" uiInput required\\r\\n                              uiMaxlength=\\\"250\\\" #campoDescricao=\\\"ngModel\\\"></textarea>\\r\\n                    <label>Descrição</label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoDescricao.errors && campoDescricao.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\"\\r\\n                                 [hidden]=\\\"!campoDescricao.pristine && !campoDescricao.errors.required\\\">Descrição é\\r\\n                                obrigatória\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoDescricao.errors.uiMaxlength\\\">Descrição não\\r\\n                                pode conter mais de 250 caracteres\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-message counter\\\"\\r\\n                             [ngClass]=\\\"{'error': info.descricao && info.descricao.length > 250}\\\">\\r\\n                            {{info.descricao ? info.descricao.length : 0}}/250\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n\\r\\n                <div class=\\\"ui-fab-container\\\">\\r\\n                    <button class=\\\"ui-button accent fab\\\" uiRipple>\\r\\n                        <i class=\\\"material-icons\\\">save</i>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </ui-card-content>\\r\\n    </ui-card>\\r\\n</div>\\r\\n\\r\\n<ui-menu #menuDelete>\\r\\n    <div class=\\\"ui-menu-content size-2x\\\">\\r\\n        <ui-subheader>Deseja excluir?</ui-subheader>\\r\\n        <div class=\\\"ui-menu-item\\\" uiRipple (click)=\\\"confirmDelete()\\\">\\r\\n            Sim\\r\\n        </div>\\r\\n        <div class=\\\"ui-menu-item\\\" uiRipple>\\r\\n            Não\\r\\n        </div>\\r\\n    </div>\\r\\n</ui-menu>\\r\\n\"","module.exports = \":host ui-card {\\n  margin-bottom: 16px; }\\n  @media (max-width: 645px) {\\n    :host ui-card {\\n      margin-bottom: 85px; } }\\n\"","import {Component, OnInit, OnDestroy, ElementRef} from '@angular/core';\r\nimport {Title} from '@angular/platform-browser';\r\nimport {UiToolbarService, UiElement, UiSnackbar} from 'ng-smn-ui';\r\nimport {Router, ActivatedRoute} from '@angular/router';\r\nimport {ApiService} from '../../../../core/api/api.service';\r\n\r\n@Component({\r\n    selector: 'curso-info-component',\r\n    templateUrl: 'curso-info.component.html',\r\n    styleUrls: ['curso-info.component.scss']\r\n})\r\n\r\nexport class CursoInfoComponent implements OnInit, OnDestroy {\r\n    info: any;\r\n    addingNew: boolean;\r\n    professores: any;\r\n\r\n    constructor(\r\n        private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        public router: Router,\r\n        private activedRoute: ActivatedRoute,\r\n        private api: ApiService,\r\n        private element: ElementRef\r\n    ) {\r\n        this.info = {};\r\n        this.professores = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('UnifaSystem - Cursos');\r\n        this.toolbarService.set('Cursos');\r\n        this.toolbarService.activateExtendedToolbar(600);\r\n\r\n        if (this.activedRoute.snapshot.params['id']) {\r\n            setTimeout(() => {\r\n                this.addingNew = false;\r\n            });\r\n            this.getInfo();\r\n        } else {\r\n            setTimeout(() => {\r\n                this.addingNew = true;\r\n            });\r\n        }\r\n\r\n        this.getProfessores();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.toolbarService.deactivateExtendedToolbar();\r\n    }\r\n\r\n    onSubmit(form) {\r\n        for (const control in form.controls) {\r\n            if (form.controls.hasOwnProperty(control)) {\r\n                form.controls[control].markAsTouched();\r\n                form.controls[control].markAsDirty();\r\n            }\r\n        }\r\n\r\n        if (!form.valid) {\r\n            UiElement.focus(this.element.nativeElement.querySelector('form .ng-invalid'));\r\n            return false;\r\n        }\r\n\r\n        if (this.addingNew) {\r\n            this.api\r\n                .prep('administracao', 'curso', 'inserir')\r\n                .call(this.info)\r\n                .subscribe(() => {\r\n                    UiSnackbar.show({\r\n                        text: 'Curso cadastrado com sucesso!'\r\n                    });\r\n                    this.router.navigate(['curso']);\r\n                });\r\n        } else {\r\n            this.api\r\n                .prep('administracao', 'curso', 'atualizar')\r\n                .call(this.info)\r\n                .subscribe(() => {\r\n                    UiSnackbar.show({\r\n                        text: 'Curso alterado com sucesso!'\r\n                    });\r\n                    this.router.navigate(['curso']);\r\n                });\r\n        }\r\n    }\r\n\r\n    getInfo() {\r\n        this.api\r\n            .prep('administracao', 'curso', 'selecionarPorId')\r\n            .call({\r\n                id: this.activedRoute.snapshot.params.id\r\n            })\r\n            .subscribe(data => {\r\n                this.info = data.content;\r\n            }, () => {\r\n                UiSnackbar.show({\r\n                    text: 'Não foi possível buscar os dados'\r\n                });\r\n            });\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.api\r\n            .prep('administracao', 'curso', 'excluir')\r\n            .call({id: this.info.id})\r\n            .subscribe(() => {\r\n                UiSnackbar.show({\r\n                    text: 'Curso removido com sucesso'\r\n                });\r\n                this.router.navigate(['curso']);\r\n            });\r\n    }\r\n\r\n    getProfessores() {\r\n        this.api\r\n            .prep('administracao', 'professor', 'selecionarSimples')\r\n            .call()\r\n            .subscribe(data => {\r\n                this.professores = data.content;\r\n            }, () => {\r\n                UiSnackbar.show({\r\n                    text: 'Erro ao buscar professores'\r\n                });\r\n                this.router.navigate(['curso']);\r\n            });\r\n    }\r\n\r\n    /*loadChips() {\r\n        const chips = JSON.parse(JSON.stringify(this.disciplinas));\r\n        this.info.disciplinas.forEach(selectedChip => {\r\n            chips.forEach((chip, i) => {\r\n                if (chip.codigo === selectedChip.codigo) {\r\n                    chips.splice(i, 1);\r\n                }\r\n            });\r\n        });\r\n\r\n        this.chips = chips;\r\n    }\r\n\r\n    chipSelect(chip) {\r\n        this.info.disciplinas.push(JSON.parse(JSON.stringify(chip)));\r\n        setTimeout(() => {\r\n            delete this.chips.search;\r\n        });\r\n    }\r\n\r\n    removeChip(chip) {\r\n        this.info.disciplinas.splice(this.info.disciplinas.indexOf(chip), 1);\r\n    }*/\r\n}\r\n","module.exports = \"<div class=\\\"ui-s480\\\">\\r\\n    <ui-card class=\\\"elevate-on-toolbar\\\">\\r\\n        <ui-data-table class=\\\"responsive\\\">\\r\\n            <tbody>\\r\\n            <tr>\\r\\n                <th>\\r\\n                    Nome\\r\\n                </th>\\r\\n                <th>\\r\\n                    Status\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr *ngFor=\\\"let item of list\\\" [routerLink]=\\\"['/curso', item.id]\\\">\\r\\n                <td data-title=\\\"Nome\\\" [class.empty]=\\\"!item.nome\\\">\\r\\n                    <span class=\\\"ellipsis\\\">\\r\\n                        {{item.nome}}\\r\\n                    </span>\\r\\n                </td>\\r\\n                <td data-title=\\\"Status\\\" [class.empty]=\\\"!item.ativo\\\">\\r\\n                    <span class=\\\"ellipsis\\\">\\r\\n                        {{item.ativo ? 'Ativo' : 'Inativo'}}\\r\\n                    </span>\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr class=\\\"empty\\\" *ngIf=\\\"!list || !list.length\\\">\\r\\n                <td colspan=\\\"4\\\">{{loading ? 'Carregando...' : 'Nenhum curso encontrado'}}</td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n            <tr>\\r\\n                <td colspan=\\\"4\\\" class=\\\"align-right\\\">\\r\\n                    <div class=\\\"ui-button-container align-right\\\">\\r\\n                        <span class=\\\"pagination\\\" *ngIf=\\\"totalLinhas\\\">\\r\\n                            {{((pagina - 1) * 10) + 1}}-{{pagina * 10 < totalLinhas ? pagina * 10 : totalLinhas}} de {{totalLinhas}}\\r\\n                        </span>\\r\\n                        <button class=\\\"ui-button flat icon\\\" uiRipple [disabled]=\\\"pagina < 2\\\"\\r\\n                                (click)=\\\"pagina = pagina - 1; getInfo();\\\">\\r\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_left</i>\\r\\n                        </button>\\r\\n                        <button class=\\\"ui-button flat icon\\\" uiRipple [disabled]=\\\"totalLinhas < pagina * 10\\\"\\r\\n                                (click)=\\\"pagina = pagina + 1; getInfo();\\\">\\r\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tfoot>\\r\\n        </ui-data-table>\\r\\n    </ui-card>\\r\\n    <div class=\\\"ui-fab-container\\\">\\r\\n        <button class=\\\"ui-button accent fab\\\" uiRipple [routerLink]=\\\"['novo']\\\">\\r\\n            <i class=\\\"material-icons\\\">add</i>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {Component, OnInit, ViewChild, ElementRef, OnDestroy} from '@angular/core';\r\nimport {Title} from '@angular/platform-browser';\r\nimport {UiToolbarService, UiElement, UiSnackbar} from 'ng-smn-ui';\r\nimport {Router} from '@angular/router';\r\nimport {ApiService} from '../../../../core/api/api.service';\r\n\r\n@Component({\r\n    selector: 'curso-list-component',\r\n    templateUrl: 'curso-list.component.html',\r\n    styleUrls: ['curso-list.component.scss']\r\n})\r\n\r\nexport class CursoListComponent implements OnInit, OnDestroy {\r\n    list: any;\r\n    loading: boolean;\r\n    totalLinhas: number;\r\n    pagina: number;\r\n\r\n    constructor(\r\n        private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        private element: ElementRef,\r\n        private router: Router,\r\n        private api: ApiService\r\n    ) {\r\n        this.list = [];\r\n        this.pagina = 1;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('UnfaSystem - Cursos');\r\n        this.toolbarService.set('Lista de cursos');\r\n        this.toolbarService.activateExtendedToolbar(480);\r\n\r\n        this.getInfo();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.toolbarService.deactivateExtendedToolbar();\r\n    }\r\n\r\n    getInfo() {\r\n        if (!this.loading) {\r\n            this.loading = true;\r\n\r\n            this.api\r\n                .prep('administracao', 'curso', 'selecionar')\r\n                .call({\r\n                    filtro: '',\r\n                    pagina: this.pagina,\r\n                    linhas: 10\r\n                })\r\n                .subscribe(data => {\r\n                    this.list = data.content;\r\n                    this.totalLinhas = data.totalLinhas;\r\n                }, () => {\r\n                    UiSnackbar.show({\r\n                        text: 'Não foi possível carregar os cursos'\r\n                    });\r\n                }, () => {\r\n                    this.loading = false;\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\n","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { UiToolbarService } from 'ng-smn-ui';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ApiService } from '../../../core/api/api.service';\r\nimport { ListService } from '../../../core/utils/list.service';\r\n\r\n@Component({\r\n    selector: 'disciplina-component',\r\n    templateUrl: './disciplina.component.html',\r\n})\r\nexport class DisciplinaComponent implements OnInit {\r\n    constructor(private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        private element: ElementRef) {\r\n    }\r\n\r\n    ngOnInit() { }\r\n}\r\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport {SharedModule} from '../../../shared.module';\r\nimport { DisciplinaComponent } from './disciplina.component';\r\nimport { DisciplinaListComponent } from './list/disciplina-list.component';\r\nimport { DisciplinaInfoComponent } from './info/disciplina-info.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [DisciplinaComponent, DisciplinaListComponent, DisciplinaInfoComponent],\r\n    providers: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class DisciplinaModule {\r\n}\r\n","module.exports = \"<div class=\\\"ui-s480\\\">\\r\\n    <ui-card class=\\\"elevate-on-toolbar\\\">\\r\\n        <ui-toolbar class=\\\"flat\\\">\\r\\n            <button class=\\\"ui-button flat icon\\\" uiRipple (click)=\\\"router.navigate(['disciplina'])\\\">\\r\\n                <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n            </button>\\r\\n            <span class=\\\"title\\\">{{addingNew ? 'Nova disciplina' : 'Alterando ' + (info.nome || 'disciplina')}}</span>\\r\\n            <div class=\\\"align-right\\\">\\r\\n                <button *ngIf=\\\"!addingNew\\\" class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple [uiMenuTrigger]=\\\"menuDelete\\\" align=\\\"right\\\">\\r\\n                    <i class=\\\"material-icons\\\">delete</i>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ui-toolbar>\\r\\n\\r\\n        <ui-card-content>\\r\\n            <form #formDisciplina=\\\"ngForm\\\" class=\\\"ui-validate on-dirty on-submit\\\" (submit)=\\\"onSubmit(formDisciplina)\\\">\\r\\n                <div class=\\\"ui-flex-container break-on-480\\\">\\r\\n                    <!-- <ui-input-container>\\r\\n                        <input #campoCodigo=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.codigo\\\" name=\\\"campoCodigo\\\" uiInput required readonly>\\r\\n                        <label>Código</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoCodigo.errors && campoCodigo.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCodigo.pristine && !campoCodigo.errors.required\\\">Código é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCodigo.errors.parse\\\">Informe um código válido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container> -->\\r\\n                    <ui-input-container>\\r\\n                        <input #campoCargaHoraria=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.cargaHoraria\\\" name=\\\"campoCargaHoraria\\\" uiInput uiMaskInteger\\r\\n                            required>\\r\\n                        <label>Carga horária</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoCargaHoraria.errors && campoCargaHoraria.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCargaHoraria.pristine && !campoCargaHoraria.errors.required\\\">Carga horária é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCargaHoraria.errors.parse\\\">Informe uma carga horária válido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <ui-input-container>\\r\\n                    <input #campoNome=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.nome\\\" name=\\\"campoNome\\\" uiInput required uiMaxlength=\\\"70\\\">\\r\\n                    <label>Nome</label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoNome.errors && campoNome.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoNome.pristine && !campoNome.errors.required\\\">Nome é obrigatório\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoNome.errors.uiMaxlength\\\">Nome não pode conter mais de 70 caracteres.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-message counter\\\" [ngClass]=\\\"{'error': info.nome && info.nome.length > 70}\\\">\\r\\n                            {{info.nome ? info.nome.length : 0}}/70\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n\\r\\n                <ui-input-container>\\r\\n                    <textarea [(ngModel)]=\\\"info.descricao\\\" name=\\\"campoDescricao\\\" rows=\\\"4\\\" uiInput required uiMaxlength=\\\"250\\\" #campoDescricao=\\\"ngModel\\\"></textarea>\\r\\n                    <label>Descrição</label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoDescricao.errors && campoDescricao.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoDescricao.pristine && !campoDescricao.errors.required\\\">Descrição é obrigatória\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoDescricao.errors.uiMaxlength\\\">Descrição não pode conter mais de 250 caracteres\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-message counter\\\" [ngClass]=\\\"{'error': info.descricao && info.descricao.length > 250}\\\">\\r\\n                            {{info.descricao ? info.descricao.length : 0}}/250\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n\\r\\n                <div class=\\\"ui-fab-container\\\">\\r\\n                    <button class=\\\"ui-button accent fab\\\" uiRipple>\\r\\n                        <i class=\\\"material-icons\\\">save</i>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </ui-card-content>\\r\\n    </ui-card>\\r\\n</div>\\r\\n\\r\\n<ui-menu #menuDelete>\\r\\n    <div class=\\\"ui-menu-content size-2x\\\">\\r\\n        <ui-subheader>Deseja excluir?</ui-subheader>\\r\\n        <div class=\\\"ui-menu-item\\\" uiRipple (click)=\\\"confirmDelete()\\\">\\r\\n            Sim\\r\\n        </div>\\r\\n        <div class=\\\"ui-menu-item\\\" uiRipple>\\r\\n            Não\\r\\n        </div>\\r\\n    </div>\\r\\n</ui-menu>\"","module.exports = \":host ui-card {\\n  margin-bottom: 16px; }\\n  @media (max-width: 645px) {\\n    :host ui-card {\\n      margin-bottom: 85px; } }\\n\"","import { Component, OnInit, OnDestroy, ElementRef } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { UiToolbarService, UiElement, UiSnackbar } from 'ng-smn-ui';\r\nimport { StorageService } from '../../../../core/utils/storage.service';\r\nimport { ListService } from '../../../../core/utils/list.service';\r\nimport { Router, Route, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from '../../../../core/api/api.service';\r\n\r\n@Component({\r\n    selector: 'disciplina-info-component',\r\n    templateUrl: 'disciplina-info.component.html',\r\n    styleUrls: ['disciplina-info.component.scss']\r\n})\r\n\r\nexport class DisciplinaInfoComponent implements OnInit, OnDestroy {\r\n    info: any;\r\n    addingNew: boolean;\r\n\r\n    constructor(\r\n        private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        private element: ElementRef,\r\n        private router: Router,\r\n        private activedRoute: ActivatedRoute,\r\n        private api: ApiService\r\n    ) {\r\n        this.info = {};\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('UnifaSystem - Disciplinas');\r\n        this.toolbarService.set('Disciplinas');\r\n        this.toolbarService.activateExtendedToolbar(600);\r\n\r\n        if (this.activedRoute.snapshot.params['id']) {\r\n            setTimeout(() => {\r\n                this.addingNew = false;\r\n            });\r\n        } else {\r\n            setTimeout(() => {\r\n                this.addingNew = true;\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.toolbarService.deactivateExtendedToolbar();\r\n    }\r\n\r\n    onSubmit(form) {\r\n        for (const control in form.controls) {\r\n            if (form.controls.hasOwnProperty(control)) {\r\n                form.controls[control].markAsTouched();\r\n                form.controls[control].markAsDirty();\r\n            }\r\n        }\r\n\r\n        if (!form.valid) {\r\n            UiElement.focus(this.element.nativeElement.querySelector('form .ng-invalid'));\r\n            return false;\r\n        }\r\n\r\n        if (this.addingNew) {\r\n            this.api\r\n                .prep('administracao', 'disciplina', 'inserir')\r\n                .call(this.info)\r\n                .subscribe(data => {\r\n                    UiSnackbar.show({\r\n                        text: 'Disciplina ' + (this.addingNew ? 'cadastrada' : 'alterada') + ' com sucesso!'\r\n                    });\r\n\r\n                    this.router.navigate(['disciplina']);\r\n                }, err => {\r\n                    UiSnackbar.show({\r\n                        message: 'Erro ao cadastrar disciplinas'\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    // getLista() {\r\n    //     const storage = this.storageService.getItem('disciplinas');\r\n    //     if (storage) {\r\n    //         const objectStorage = JSON.parse(storage);\r\n    //         this.listaDisciplinas.setHead(objectStorage);\r\n    //         this.listaDisciplinas.setSize();\r\n    //     }\r\n    // }\r\n\r\n    // confirmDelete() {\r\n    //     this.listaDisciplinas.remove(this.index);\r\n\r\n    //     if(!this.listaDisciplinas.size()) {\r\n    //         this.storageService.removeItem('disciplinas');\r\n    //     } else {\r\n    //         const head = this.listaDisciplinas.getHead();\r\n    //         this.storageService.setNewItem('disciplinas', JSON.stringify(head));\r\n    //     }\r\n\r\n    //     UiSnackbar.show({\r\n    //         text: 'Disciplina removida com sucesso'\r\n    //     });\r\n\r\n    //     this.router.navigate(['disciplina']);\r\n    // }\r\n}\r\n","module.exports = \"<div class=\\\"ui-s480\\\">\\r\\n    <ui-card class=\\\"elevate-on-toolbar\\\">\\r\\n        <div class=\\\"ui-progress\\\" [class.hide]=\\\"!(loading && !searching)\\\">\\r\\n            <div class=\\\"indeterminate\\\"></div>\\r\\n        </div>\\r\\n        <ui-toolbar class=\\\"flat\\\">\\r\\n            <button class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple (click)=\\\"_location.back()\\\">\\r\\n                <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n            </button>\\r\\n            <span class=\\\"title\\\" [ngClass]=\\\"{'hide': searchOpen}\\\">Lista de Disciplinas</span>\\r\\n            <div class=\\\"align-right\\\">\\r\\n                <form #searchForm=\\\"ngForm\\\" name=\\\"searchForm\\\" class=\\\"ui-validate on-dirty\\\" [ngClass]=\\\"{'open': searchOpen}\\\">\\r\\n                    <ui-input-container>\\r\\n                        <input #searchFormText=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"searchText\\\" [(ngModel)]=\\\"searchText\\\" uiMaxlength=\\\"200\\\" uiInput [persistPlaceholder]=\\\"true\\\"\\r\\n                            placeholder=\\\"Pesquisa\\\" (keyup)=\\\"search(searchFormText.value)\\\">\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"searchFormText.errors && searchFormText.dirty\\\">\\r\\n                                <div class=\\\"ui-message counter error\\\">\\r\\n                                    {{searchText ? searchText.length : 0}}/200\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                </form>\\r\\n                <button class=\\\"ui-button flat icon search\\\" uiRipple type=\\\"button\\\" (click)=\\\"toggleSearch()\\\">\\r\\n                    <ui-progress-radial class=\\\"indeterminate\\\" *ngIf=\\\"searching\\\"></ui-progress-radial>\\r\\n                    <i class=\\\"material-icons\\\" [ngClass]=\\\"{'show': !searchOpen}\\\">search</i>\\r\\n                    <i class=\\\"material-icons\\\" [ngClass]=\\\"{'show': searchOpen}\\\">close</i>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ui-toolbar>\\r\\n        <ui-data-table class=\\\"responsive\\\">\\r\\n            <tbody #elementInsert>\\r\\n                <tr>\\r\\n                    <th>\\r\\n                        Nome\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        Carga horária\\r\\n                    </th>\\r\\n                </tr>\\r\\n                <tr *ngFor=\\\"let item of disciplinas\\\" [routerLink]=\\\"['/disciplina', item._id]\\\">\\r\\n                    <td data-title=\\\"Nome\\\" class=\\\"no-wrap\\\">\\r\\n                        {{item.nome}}\\r\\n                    </td>\\r\\n                    <td data-title=\\\"Carga Horária\\\" class=\\\"no-wrap\\\">\\r\\n                        {{item.cargaHoraria}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr class=\\\"empty\\\" *ngIf=\\\"!disciplinas || !disciplinas.length\\\">\\r\\n                    <td colspan=\\\"2\\\">{{loading ? 'Carregando...' : 'Nenhuma disciplina encontrada'}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n                <tr>\\r\\n                    <td colspan=\\\"4\\\" class=\\\"align-right\\\">\\r\\n                        <div class=\\\"ui-button-container align-right\\\">\\r\\n                            <span class=\\\"pagination\\\" *ngIf=\\\"totalLinhas\\\">\\r\\n                                {{((pagina - 1) * 10) + 1}}-{{pagina * 10\\r\\n                                < totalLinhas ? pagina * 10 : totalLinhas}} de {{totalLinhas}} </span>\\r\\n                                    <button class=\\\"ui-button flat icon\\\" uiRipple [disabled]=\\\"pagina < 2\\\" (click)=\\\"pagina = pagina - 1; getDisciplinas();\\\" type=\\\"button\\\">\\r\\n                                        <i class=\\\"material-icons\\\">keyboard_arrow_left</i>\\r\\n                                    </button>\\r\\n                                    <button class=\\\"ui-button flat icon\\\" uiRipple type=\\\"button\\\" [disabled]=\\\"totalLinhas <= pagina * 10\\\" (click)=\\\"pagina = pagina + 1; getDisciplinas();\\\">\\r\\n                                        <i class=\\\"material-icons\\\">keyboard_arrow_right</i>\\r\\n                                    </button>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </tfoot>\\r\\n        </ui-data-table>\\r\\n    </ui-card>\\r\\n    <div class=\\\"ui-fab-container\\\">\\r\\n        <button class=\\\"ui-button accent fab\\\" uiRipple [routerLink]=\\\"['nova']\\\">\\r\\n            <i class=\\\"material-icons\\\">add</i>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"/* https://material.io/guidelines/motion/duration-easing.html#duration-easing-natural-easing-curves */\\n/* Inspired by https://github.com/nilskaspersson/Google-Material-UI-Color-Palette */\\n/* https://material.io/guidelines/resources/shadows.html */\\n:host ui-card {\\n  position: relative;\\n  margin-bottom: 20px; }\\n:host ui-card /deep/ header {\\n    background-color: white;\\n    color: black; }\\n:host ui-card /deep/ .ui-button.search {\\n    position: relative; }\\n:host ui-card /deep/ .ui-button.search i {\\n      position: absolute;\\n      left: 6px;\\n      top: 6px;\\n      transition: opacity 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0, 0, 0.2, 1);\\n      transition: transform 280ms cubic-bezier(0, 0, 0.2, 1), opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);\\n      transition: transform 280ms cubic-bezier(0, 0, 0.2, 1), opacity 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0, 0, 0.2, 1);\\n      opacity: 0; }\\n:host ui-card /deep/ .ui-button.search i:nth-of-type(1) {\\n        -webkit-transform: rotate(180deg);\\n                transform: rotate(180deg); }\\n:host ui-card /deep/ .ui-button.search i:nth-of-type(2) {\\n        -webkit-transform: rotate(-180deg);\\n                transform: rotate(-180deg); }\\n:host ui-card /deep/ .ui-button.search i.show {\\n        -webkit-transform: rotate(0);\\n                transform: rotate(0);\\n        opacity: 1; }\\n@media (max-width: 763px) {\\n    :host ui-card {\\n      margin-bottom: 85px; } }\\n:host ui-card .ui-progress {\\n    position: absolute; }\\n:host /deep/ form[name=\\\"searchForm\\\"] {\\n  transition: all 280ms cubic-bezier(0, 0, 0.2, 1);\\n  position: absolute;\\n  right: 60px;\\n  left: 100%;\\n  top: 14px; }\\n:host /deep/ form[name=\\\"searchForm\\\"] ui-input-container {\\n    width: 100%; }\\n:host /deep/ form[name=\\\"searchForm\\\"] ui-input-container .ui-input-wrap {\\n      padding-top: 0;\\n      margin-bottom: 0; }\\n:host /deep/ form[name=\\\"searchForm\\\"] ui-input-container .ui-input-wrap input::-webkit-input-placeholder {\\n        transition: color 280ms cubic-bezier(0, 0, 0.2, 1); }\\n:host /deep/ form[name=\\\"searchForm\\\"]:not(.open) ui-input-container .ui-input-wrap input::-webkit-input-placeholder {\\n    color: transparent; }\\n:host /deep/ form[name=\\\"searchForm\\\"].open {\\n    left: 65px; }\\n:host ui-toolbar .title {\\n  transition: opacity 280ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity 280ms cubic-bezier(0, 0, 0.2, 1), transform 280ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity 280ms cubic-bezier(0, 0, 0.2, 1), transform 280ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0, 0, 0.2, 1); }\\n:host ui-toolbar .title.hide {\\n    opacity: 0;\\n    -webkit-transform: translateY(-20px);\\n            transform: translateY(-20px); }\\n\"","import { Component, OnInit, ElementRef, OnDestroy, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { UiToolbarService, UiSnackbar, UiElement } from 'ng-smn-ui';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '../../../../core/api/api.service';\r\nimport { Subject } from '../../../../../../node_modules/rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { debounceTime, distinctUntilChanged } from '../../../../../../node_modules/rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'disciplina-list-component',\r\n    templateUrl: 'disciplina-list.component.html',\r\n    styleUrls: ['disciplina-list.component.scss']\r\n})\r\n\r\nexport class DisciplinaListComponent implements OnInit, OnDestroy, AfterViewInit {\r\n    disciplinas: any;\r\n    totalLinhas: Number;\r\n    pagina: Number;\r\n    loading: boolean;\r\n    searchOpen: boolean;\r\n    searching: boolean;\r\n    searchText: string;\r\n    private searchTerms = new Subject<string>();\r\n    constructor(\r\n        private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        private element: ElementRef,\r\n        private api: ApiService,\r\n        public _location: Location,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n    ) {\r\n        this.disciplinas = [];\r\n        this.totalLinhas = 0;\r\n        this.pagina = 1;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('UnfaSystem - Disciplinas');\r\n        this.toolbarService.set('Lista de disciplinas');\r\n        this.toolbarService.activateExtendedToolbar(480);\r\n\r\n        this.searchTerms.pipe(\r\n            debounceTime(300),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(() => {\r\n                if (!this.searchText || this.searchText.length <= 200) {\r\n                    this.searching = true;\r\n                    this.getDisciplinas();\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.toolbarService.deactivateExtendedToolbar();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.getDisciplinas();\r\n    }\r\n\r\n    search(term: string) {\r\n        this.searchTerms.next(term);\r\n    }\r\n\r\n    toggleSearch() {\r\n        const inputSearch = this.element.nativeElement.querySelector('input[name=\"searchText\"]');\r\n\r\n        if (this.searchOpen) {\r\n            this.searchOpen = false;\r\n            UiElement.closest(inputSearch, 'form').style.right = '';\r\n            this.searchText = '';\r\n            this.getDisciplinas();\r\n        } else {\r\n            this.searchOpen = true;\r\n            UiElement.closest(inputSearch, 'form').style.right = UiElement.closest(inputSearch, '.align-right').clientWidth + 'px';\r\n\r\n            setTimeout(() => {\r\n                inputSearch.focus();\r\n            }, 280);\r\n        }\r\n    }\r\n\r\n    getDisciplinas(): void {\r\n        if (!this.loading && (!this.searchText || this.searchText.length <= 200)) {\r\n            this.loading = true;\r\n            this.changeDetectorRef.detectChanges();\r\n\r\n            this.api\r\n                .prep('administracao', 'disciplina', 'selecionar')\r\n                .call({\r\n                    filtro: this.searchText || '',\r\n                    pagina: this.pagina\r\n                })\r\n                .subscribe(res => {\r\n                    this.disciplinas = res.content;\r\n                    this.totalLinhas = res.totalLinhas;\r\n                }, () => {\r\n                    UiSnackbar.show({\r\n                        text: 'Não foi possível carregar as disciplinas'\r\n                    });\r\n                }, () => {\r\n                    this.loading = false;\r\n                    this.searching = false;\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { UiToolbarService } from 'ng-smn-ui';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ApiService } from '../../../core/api/api.service';\r\nimport { ListService } from '../../../core/utils/list.service';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    constructor(private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        private element: ElementRef) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('Home');\r\n        this.toolbarService.set('UnifaSystem - Home');\r\n    }\r\n}\r\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport {SharedModule} from \"../../../shared.module\";\r\nimport {HomeComponent} from './home.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [HomeComponent],\r\n    providers: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class HomeModule {\r\n}\r\n","module.exports = \"<ui-toolbar class=\\\"fixed flat elevate-on-scroll primary elevate-on-s960\\\" id=\\\"app-header\\\">\\r\\n    <button (click)=\\\"menuOpen = true\\\" class=\\\"ui-button flat icon\\\" uiRipple>\\r\\n        <i class=\\\"material-icons\\\">menu</i>\\r\\n    </button>\\r\\n    <!-- <div class=\\\"logo\\\">\\r\\n        <img src=\\\"assets/images/logotipo-negativo.png\\\" alt=\\\"Cronos logo\\\" title=\\\"Cronos logo\\\">\\r\\n    </div> -->\\r\\n    <span class=\\\"title\\\">{{title}}</span>\\r\\n    <div class=\\\"align-right\\\">\\r\\n        <!-- <button class=\\\"ui-button flat icon\\\" uiRipple>\\r\\n            <i class=\\\"material-icons\\\">notifications</i>\\r\\n            <span class=\\\"badge\\\">2</span>\\r\\n        </button> -->\\r\\n        <div class=\\\"avatar\\\"\\r\\n             [uiMenuTrigger]=\\\"menuUser\\\"\\r\\n             menu-align=\\\"right\\\"\\r\\n             theme-class=\\\"menu-user\\\"\\r\\n             [ngStyle]=\\\"{'background-image': user.imagem ? 'url(' + user.imagem + ')' : '',\\r\\n                         'background-color': user.imagem ? 'white' : user.cor,\\r\\n                         'color': isBright(user.cor) ? 'black': 'white'}\\\">\\r\\n            <span *ngIf=\\\"user && !user.imagem && user.nome\\\">{{user.nome.charAt(0)}}</span>\\r\\n        </div>\\r\\n    </div>\\r\\n</ui-toolbar>\\r\\n\\r\\n<!-- Add class 'persistent' para deixar o menu persistente, deve também descomentar o código no main.component -->\\r\\n<ui-nav-drawer [(open)]=\\\"menuOpen\\\">\\r\\n    <ui-toolbar class=\\\"flat\\\">\\r\\n        <button (click)=\\\"menuOpen = false\\\" class=\\\"ui-button flat icon\\\" uiRipple>\\r\\n            <i class=\\\"material-icons\\\">menu</i>\\r\\n        </button>\\r\\n        <div class=\\\"logo\\\">\\r\\n            <!-- <img src=\\\"assets/images/logotipo-menu.png\\\" alt=\\\"Cronos logo\\\" title=\\\"Cronos logo\\\"> -->\\r\\n        </div>\\r\\n    </ui-toolbar>\\r\\n    <div class=\\\"ui-nav-drawer-overflow\\\">\\r\\n        <div class=\\\"ui-list\\\">\\r\\n            <a class=\\\"ui-list-item\\\" uiRipple routerLink=\\\"/\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Home</a>\\r\\n        </div>\\r\\n        <ui-list [list]=\\\"menu\\\" [item-model]=\\\"menuConfig\\\"></ui-list>\\r\\n    </div>\\r\\n</ui-nav-drawer>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n<ui-menu #menuUser>\\r\\n    <header>\\r\\n        <div class=\\\"avatar\\\"\\r\\n             menu-align=\\\"right\\\"\\r\\n             [ngStyle]=\\\"{'background-image': user.imagem ? 'url(' + user.imagem + ')' : '',\\r\\n                         'background-color': user.imagem ? 'white' : user.cor,\\r\\n                         'color': isBright(user.cor) ? 'black': 'white'}\\\">\\r\\n            <span *ngIf=\\\"!user.imagem\\\">{{user.nome?.charAt(0)}}</span>\\r\\n        </div>\\r\\n        <div class=\\\"primary-text\\\">{{user.nome}}</div>\\r\\n    </header>\\r\\n    <div class=\\\"ui-menu-content size-3x\\\">\\r\\n        <div class=\\\"ui-menu-item\\\" uiRipple (click)=\\\"logoff()\\\">\\r\\n            Sair\\r\\n        </div>\\r\\n    </div>\\r\\n</ui-menu>\\r\\n\\r\\n\"","module.exports = \":host > /deep/ ui-nav-drawer ui-list .ui-list {\\n  padding: 0; }\\n\\n:host > ui-toolbar .avatar {\\n  width: 36px;\\n  height: 36px;\\n  border-radius: 50%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-position: center;\\n  background-size: cover;\\n  margin: 12px;\\n  cursor: default;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n/deep/ .menu-user header {\\n  display: flex;\\n  align-items: center; }\\n\\n/deep/ .menu-user .avatar {\\n  width: 36px;\\n  height: 36px;\\n  border-radius: 50%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-position: center;\\n  background-size: cover;\\n  margin: 12px;\\n  cursor: default;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\"","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { UiCookie, UiToolbarService, UiColor } from 'ng-smn-ui';\r\nimport { UserService } from '../../core/utils/user/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-main',\r\n    templateUrl: './main.component.html',\r\n    styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit, AfterViewInit {\r\n    title: String;\r\n    menuOpen: boolean;\r\n    menuConfig: any;\r\n    menu: any;\r\n    user: any;\r\n\r\n    constructor(private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        private router: Router) {\r\n        toolbarService.change.subscribe(title => {\r\n            this.title = title;\r\n        });\r\n\r\n        this.menuConfig = {\r\n            id: 'id',\r\n            parentId: 'idmae',\r\n            url: 'url',\r\n            name: 'nome'\r\n        };\r\n\r\n        this.menu = UserService.getMenu();\r\n        this.user = UserService.getUser();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('UnifaSystem');\r\n        this.toolbarService.set('');\r\n        this.menuOpen = false;\r\n        this.toolbarService.registerMainToolbar(document.getElementById('app-header'));\r\n        /**\r\n         * Descomentar o código para deixar o menu persistente\r\n         * const isNavDrawerPersistent = UiCookie.get('NavDrawerPersistent') === 'true';\r\n         * if (isNavDrawerPersistent) {\r\n         *      this.menuOpen = true;\r\n         * }\r\n         * */\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    isBright(color) {\r\n        return UiColor.isBright(color);\r\n    }\r\n\r\n    logoff() {\r\n        UserService.remove();\r\n        this.router.navigate(['/login']);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../../shared.module';\r\nimport { MainComponent } from './main.component';\r\nimport { HomeModule } from './home/home.module';\r\nimport { UserService } from '../../core/utils/user/user.service';\r\nimport { ProfessorModule } from './professor/professor.module';\r\nimport { StorageService } from '../../core/utils/storage.service';\r\nimport { AlunoModule } from './aluno/aluno.module';\r\nimport { DisciplinaModule } from './disciplina/disciplina.module';\r\nimport { CursoModule } from './curso/curso.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        HomeModule,\r\n        ProfessorModule,\r\n        AlunoModule,\r\n        DisciplinaModule,\r\n        CursoModule\r\n    ],\r\n    exports: [],\r\n    declarations: [MainComponent],\r\n    providers: [UserService, StorageService],\r\n})\r\nexport class MainModule {\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { MainComponent } from './main.component';\r\nimport { AuthGuard } from '../auth/guard/auth.guard';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfessorComponent } from './professor/professor.component';\r\nimport { ProfessorListComponent } from './professor/list/professor-list.component';\r\nimport { ProfessorInfoComponent } from './professor/info/professor-info.component';\r\nimport { AlunoComponent } from './aluno/aluno.component';\r\nimport { AlunoListComponent } from './aluno/list/aluno-list.component';\r\nimport { AlunoInfoComponent } from './aluno/info/aluno-info.component';\r\nimport { DisciplinaComponent } from './disciplina/disciplina.component';\r\nimport { DisciplinaListComponent } from './disciplina/list/disciplina-list.component';\r\nimport { DisciplinaInfoComponent } from './disciplina/info/disciplina-info.component';\r\nimport { CursoComponent } from './curso/curso.component';\r\nimport { CursoListComponent } from './curso/list/curso-list.component';\r\nimport { CursoInfoComponent } from './curso/info/curso-info.component';\r\n\r\nexport const MAIN_ROUTES: Routes = [{\r\n    path: '',\r\n    component: MainComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n        { path: '', component: HomeComponent },\r\n        {\r\n            path: 'professor',\r\n            component: ProfessorComponent,\r\n            children: [\r\n                { path: '', component: ProfessorListComponent },\r\n                { path: 'novo', component: ProfessorInfoComponent },\r\n                { path: 'nova', redirectTo: 'novo' },\r\n                { path: ':id', component: ProfessorInfoComponent }\r\n            ]\r\n        },\r\n        {\r\n            path: 'aluno',\r\n            component: AlunoComponent,\r\n            children: [\r\n                { path: '', component: AlunoListComponent },\r\n                { path: 'novo', component: AlunoInfoComponent },\r\n                { path: 'nova', redirectTo: 'novo' },\r\n                { path: ':id', component: AlunoInfoComponent }\r\n            ]\r\n        },\r\n        {\r\n            path: 'disciplina',\r\n            component: DisciplinaComponent,\r\n            children: [\r\n                { path: '', component: DisciplinaListComponent },\r\n                { path: 'nova', component: DisciplinaInfoComponent },\r\n                { path: 'novo', redirectTo: 'nova' },\r\n                { path: ':id', component: DisciplinaInfoComponent }\r\n            ]\r\n        },\r\n        {\r\n            path: 'curso',\r\n            component: CursoComponent,\r\n            children: [\r\n                { path: '', component: CursoListComponent },\r\n                { path: 'novo', component: CursoInfoComponent },\r\n                { path: 'nova', redirectTo: 'novo' },\r\n                { path: ':id', component: CursoInfoComponent }\r\n            ]\r\n        },\r\n    ]\r\n}];\r\n","module.exports = \"<div class=\\\"ui-s600\\\">\\r\\n    <ui-card class=\\\"elevate-on-toolbar\\\">\\r\\n        <ui-toolbar class=\\\"flat\\\">\\r\\n            <button class=\\\"ui-button flat icon\\\" uiRipple (click)=\\\"router.navigate(['professor'])\\\">\\r\\n                <i class=\\\"material-icons\\\">arrow_back</i>\\r\\n            </button>\\r\\n            <span class=\\\"title\\\">{{addingNew ? 'Novo professor' : 'Alterando ' + (info.nome || 'professor')}}</span>\\r\\n            <div class=\\\"align-right\\\">\\r\\n                <button *ngIf=\\\"!addingNew\\\" class=\\\"ui-button flat icon\\\" type=\\\"button\\\" uiRipple\\r\\n                        [uiMenuTrigger]=\\\"menuDelete\\\" align=\\\"right\\\">\\r\\n                    <i class=\\\"material-icons\\\">delete</i>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ui-toolbar>\\r\\n\\r\\n        <ui-card-content>\\r\\n            <form #formProfessor=\\\"ngForm\\\" class=\\\"ui-validate on-dirty on-submit\\\" (submit)=\\\"onSubmit(formProfessor)\\\">\\r\\n                <div class=\\\"ui-flex-container breake-on-s600\\\">\\r\\n                    <ui-input-container>\\r\\n                        <input #campoCpf=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.cpf\\\" name=\\\"campoCpf\\\"\\r\\n                               (blur)=\\\"verificaCpf(info.cpf)\\\" uiInput required\\r\\n                               uiMaskCpf>\\r\\n                        <label>CPF</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoCpf.errors && campoCpf.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\"\\r\\n                                     [hidden]=\\\"!campoCpf.pristine && !campoCpf.errors.required\\\">CPF é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCpf.errors.parse\\\">Informe um CPF válido\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoCpf.errors.cpfExistente\\\">CPF já cadastrado\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n\\r\\n                    <ui-input-container>\\r\\n                        <input type=\\\"text\\\" uiInput [(ngModel)]=\\\"info.dataNascimento\\\" name=\\\"date\\\"\\r\\n                               [uiDatePicker]=\\\"'dataNascimento'\\\" uiMaskDate #DataNascimento=\\\"ngModel\\\"\\r\\n                               required>\\r\\n                        <label>Data de Nascimento</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"DataNascimento.errors && DataNascimento.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\"\\r\\n                                     [hidden]=\\\"!DataNascimento.pristine && !DataNascimento.errors.required\\\">\\r\\n                                    Data de nascimento é obrigatória\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\"\\r\\n                                     [hidden]=\\\"!DataNascimento.pristine && !DataNascimento.errors.parse\\\">\\r\\n                                    Informe uma data válida\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"icon\\\">\\r\\n                            <button class=\\\"ui-button icon flat\\\" [uiDatePickerCaller]=\\\"'dataNascimento'\\\" type=\\\"button\\\">\\r\\n                                <i class=\\\"material-icons\\\">today</i>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                </div>\\r\\n\\r\\n                <ui-input-container>\\r\\n                    <input #campoNome=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.nome\\\" name=\\\"campoNome\\\" uiInput required\\r\\n                           uiMaxlength=\\\"30\\\">\\r\\n                    <label>Nome</label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoNome.errors && campoNome.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoNome.pristine && !campoNome.errors.required\\\">\\r\\n                                Nome é obrigatório\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoNome.errors.uiMaxlength\\\">Nome não pode conter\\r\\n                                mais de 30 caracteres.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-message counter\\\" [ngClass]=\\\"{'error': info.nome && info.nome.length > 30}\\\">\\r\\n                            {{info.nome ? info.nome.length : 0}}/30\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n\\r\\n                <ui-input-container>\\r\\n                    <input #campoSobrenome=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.sobrenome\\\" name=\\\"campoSobrenome\\\"\\r\\n                           uiInput required uiMaxlength=\\\"30\\\">\\r\\n                    <label>Sobrenome</label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoSobrenome.errors && campoSobrenome.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\"\\r\\n                                 [hidden]=\\\"!campoSobrenome.pristine && !campoSobrenome.errors.required\\\">Nome é\\r\\n                                obrigatório\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoSobrenome.errors.uiMaxlength\\\">Nome não pode\\r\\n                                conter mais de 30 caracteres.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-message counter\\\"\\r\\n                             [ngClass]=\\\"{'error': info.sobrenome && info.sobrenome.length > 30}\\\">\\r\\n                            {{info.sobrenome ? info.sobrenome.length : 0}}/30\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n\\r\\n                <ui-input-container>\\r\\n                    <input #campoTelefone=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.telefone\\\" name=\\\"campoTelefone\\\" uiInput\\r\\n                           required uiMaskPhone>\\r\\n                    <label>Telefone</label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoTelefone.errors && campoTelefone.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\"\\r\\n                                 [hidden]=\\\"!campoTelefone.pristine && !campoTelefone.errors.required\\\">Email é\\r\\n                                obrigatório\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\"\\r\\n                                 [hidden]=\\\"!campoTelefone.pristine && !campoTelefone.errors.parse\\\">Insira um email\\r\\n                                válido\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n\\r\\n\\r\\n                <ui-input-container>\\r\\n                    <input #campoEmail=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.email\\\" name=\\\"campoEmail\\\" uiInput required\\r\\n                           uiMaxlength=\\\"252\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\">\\r\\n                    <label>Email</label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoEmail.errors && campoEmail.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\"\\r\\n                                 [hidden]=\\\"!campoEmail.pristine && !campoEmail.errors.required\\\">Email é obrigatório\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoEmail.pristine && !campoEmail.errors.pattern\\\">\\r\\n                                Insira um email válido\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoEmail.errors.uiMaxlength\\\">Email não pode\\r\\n                                conter mais de 252 caracteres.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-message counter\\\" [ngClass]=\\\"{'error': info.email && info.email.length > 252}\\\">\\r\\n                            {{info.email ? info.email.length : 0}}/252\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n\\r\\n                <ui-input-container>\\r\\n                    <input #campoSalario=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.salario\\\" name=\\\"campoSalario\\\" uiInput\\r\\n                           required uiMaskCurrency>\\r\\n                    <label>Salário</label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoSalario.errors && campoSalario.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\"\\r\\n                                 [hidden]=\\\"!campoSalario.pristine && !campoSalario.errors.required\\\">\\r\\n                                Salário é obrigatório\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n                <ui-subheader>Acesso ao sistema</ui-subheader>\\r\\n                <ui-input-container>\\r\\n                    <input #campoLogon=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.logon\\\" name=\\\"campoLogon\\\" uiInput required\\r\\n                           uiMaxlength=\\\"10\\\" (blur)=\\\"verifyLogon(formProfessor, info.logon)\\\">\\r\\n                    <label>Nome de usuário/Logon</label>\\r\\n                    <div class=\\\"ui-messages\\\">\\r\\n                        <div *ngIf=\\\"campoLogon.errors && campoLogon.dirty\\\">\\r\\n                            <div class=\\\"ui-message error\\\"\\r\\n                                 [hidden]=\\\"!campoLogon.pristine && !campoLogon.errors.required\\\">\\r\\n                                Logon é obrigatório\\r\\n                            </div>\\r\\n                            <div class=\\\"ui-message error\\\"\\r\\n                                 [hidden]=\\\"!campoLogon.pristine && !campoLogon.errors.uiMaxlength\\\">\\r\\n                                Máximo de 10 caracteres\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-input-container>\\r\\n                <div class=\\\"ui-flex-container break-on-s600\\\">\\r\\n                    <ui-input-container>\\r\\n                        <input #campoSenha=\\\"ngModel\\\" #campoSenhaEv type=\\\"password\\\" [(ngModel)]=\\\"info.senha\\\" uiInput name=\\\"campoSenha\\\" [required]=\\\"!info.id\\\" uiMaxlength=\\\"30\\\"\\r\\n                               uiMinlength=\\\"6\\\" (blur)=\\\"senhasIguais(formProfessor)\\\">\\r\\n                        <label>{{info.id ? 'Nova senha' : 'Senha'}}</label>\\r\\n                        <div class=\\\"icon\\\">\\r\\n                            <button class=\\\"ui-button icon flat change-type\\\" type=\\\"button\\\" (click)=\\\"changeVisibility(campoSenhaEv, 0)\\\" uiRipple>\\r\\n                                <i class=\\\"material-icons\\\">visibility</i>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoSenha.errors && campoSenha.dirty\\\">form\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"campoSenha.errors.required || !campoSenha.errors.wrongPass\\\">\\r\\n                                    Senhas não coincidem\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoSenha.errors.uiMinlength\\\">\\r\\n                                    A senha deve ter no mínimo 6 caracteres\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoSenha.pristine && !campoSenha.errors.required\\\">\\r\\n                                    Informe uma senha de até 30 caracteres\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message counter error\\\" [hidden]=\\\"!campoSenha.errors.uiMaxlength\\\">\\r\\n                                    {{info.senha ? info.senha.length : 0}}/30\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                    <ui-input-container>\\r\\n                        <input #campoConfirmaSenha=\\\"ngModel\\\" #campoConfirmaSenhaEv type=\\\"password\\\" [(ngModel)]=\\\"info.confirmaSenha\\\" uiInput name=\\\"campoConfirmaSenha\\\"\\r\\n                               [required]=\\\"!info.id\\\" uiMaxlength=\\\"30\\\" (blur)=\\\"senhasIguais(formProfessor)\\\">\\r\\n                        <label>Confirmação de senha</label>\\r\\n                        <div class=\\\"icon\\\">\\r\\n                            <button class=\\\"ui-button icon flat change-type\\\" type=\\\"button\\\" (click)=\\\"changeVisibility(campoConfirmaSenhaEv, 1)\\\" uiRipple>\\r\\n                                <i class=\\\"material-icons\\\">visibility</i>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoConfirmaSenha.errors && campoConfirmaSenha.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"campoConfirmaSenha.errors.required || !campoConfirmaSenha.errors.wrongPass\\\">\\r\\n                                    Senhas não coincidem\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoConfirmaSenha.pristine && !campoConfirmaSenha.errors.required\\\">\\r\\n                                    Por favor confirme sua senha\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message counter error\\\" [hidden]=\\\"!campoConfirmaSenha.errors.uiMaxlength\\\">\\r\\n                                    {{info.confirmaSenha ? info.confirmaSenha.length : 0}}/30\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                </div>\\r\\n\\r\\n                <!--<ui-chips>\\r\\n                    <ui-input-container>\\r\\n                        <input #campoDisciplinas=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"campoDisciplinas\\\" [(ngModel)]=\\\"chips.search\\\" uiInput uiAutocomplete\\r\\n                            (input)=\\\"loadChips()\\\" (focus)=\\\"loadChips()\\\" [list]=\\\"chips\\\" [primary]=\\\"'nome'\\\" [loading]=\\\"chips.loading\\\"\\r\\n                            [select]=\\\"chipSelect.bind(this)\\\">\\r\\n                        <label>Disciplinas</label>\\r\\n                    </ui-input-container>\\r\\n                    <div *ngFor=\\\"let selectedChip of info.disciplinas\\\" class=\\\"ui-chip\\\">\\r\\n                        {{selectedChip.nome}}\\r\\n                        <div class=\\\"close ripple-rounded\\\" uiRipple (click)=\\\"removeChip(selectedChip)\\\">\\r\\n                            <i class=\\\"material-icons\\\">add_circle</i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ui-chips>-->\\r\\n\\r\\n                <ui-subheader>Endereço</ui-subheader>\\r\\n\\r\\n                <div class=\\\"ui-flex-container break-on-s600\\\">\\r\\n                    <ui-input-container>\\r\\n                        <input #campoCepCartao=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.endereco.cep\\\" uiInput\\r\\n                               name=\\\"campoCepCartao\\\" uiMaskCep required (blur)=\\\"getCep(formProfessor, info.endereco.cep)\\\">\\r\\n                        <label>CEP</label>\\r\\n                        <div class=\\\"icon\\\">\\r\\n                            <button class=\\\"ui-button icon flat\\\" type=\\\"button\\\" (click)=\\\"getCep(formProfessor, info.endereco.cep)\\\"\\r\\n                                    uiRipple [disabled]=\\\"campoCepCartao.errors || !campoCepCartao.dirty\\\">\\r\\n                                <ui-progress-radial class=\\\"indeterminate primary\\\"\\r\\n                                                    *ngIf=\\\"buscandoCep\\\"></ui-progress-radial>\\r\\n                                <i class=\\\"material-icons\\\">search</i>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoCepCartao.errors && campoCepCartao.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\"\\r\\n                                     [hidden]=\\\"!campoCepCartao.pristine && !campoCepCartao.errors.required\\\">\\r\\n                                    CEP é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message error\\\"\\r\\n                                     [hidden]=\\\"!campoCepCartao.errors.parse && !campoCepCartao.hasError(['invalidCep'])\\\">\\r\\n                                    CEP inválido\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                    <ui-input-container>\\r\\n                        <ui-select #campoEstadoCartao=\\\"ngModel\\\" name=\\\"campoEstadoCartao\\\" [(ngModel)]=\\\"info.endereco.uf\\\"\\r\\n                                   [options]=\\\"estados\\\" value=\\\"sigla\\\" label=\\\"nome\\\"\\r\\n                                   uiInput required [chosen]=\\\"true\\\"></ui-select>\\r\\n                        <label>\\r\\n                            Estado\\r\\n                        </label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoEstadoCartao.errors && campoEstadoCartao.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoEstadoCartao.errors.required\\\">\\r\\n                                    Estado é obrigatório\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                </div>\\r\\n                <div class=\\\"ui-flex-container break-on-s600\\\">\\r\\n                    <ui-input-container>\\r\\n                        <ui-select #campoIdCidade=\\\"ngModel\\\" name=\\\"campoIdCidade\\\" [(ngModel)]=\\\"info.endereco.idCidade\\\"\\r\\n                                   [options]=\\\"cidades\\\" value=\\\"id\\\" label=\\\"nome\\\"\\r\\n                                   uiInput required [chosen]=\\\"true\\\"></ui-select>\\r\\n                        <label>\\r\\n                            Cidade\\r\\n                        </label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoIdCidade.errors && campoIdCidade.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\" [hidden]=\\\"!campoIdCidade.errors.required\\\">\\r\\n                                    Cidade é obrigatória\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                    <ui-input-container>\\r\\n                        <input #campoLogradouro=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.endereco.logradouro\\\" uiInput\\r\\n                               name=\\\"campoLogradouro\\\" required uiMaxlength=\\\"70\\\">\\r\\n                        <label>Logradouro</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoLogradouro.errors && campoLogradouro.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\"\\r\\n                                     [hidden]=\\\"!campoLogradouro.pristine && !campoLogradouro.errors.required\\\">\\r\\n                                    Logradouro é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message counter error\\\" [hidden]=\\\"!campoLogradouro.errors.uiMaxlength\\\">\\r\\n                                    {{info.endereco.logradouro ? info.endereco.logradouro.length : 0}}/70\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                </div>\\r\\n                <div class=\\\"ui-flex-container break-on-s600\\\">\\r\\n                    <ui-input-container>\\r\\n                        <input #campoNumeroEnd=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.endereco.numero\\\" uiInput\\r\\n                               name=\\\"campoNumeroEnd\\\" required uiMaxlength=\\\"15\\\">\\r\\n                        <label>Número</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoNumeroEnd.errors && campoNumeroEnd.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\"\\r\\n                                     [hidden]=\\\"!campoNumeroEnd.pristine && !campoNumeroEnd.errors.required\\\">\\r\\n                                    Número é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message counter error\\\" [hidden]=\\\"!campoNumeroEnd.errors.uiMaxlength\\\">\\r\\n                                    {{info.endereco.numero ? info.endereco.numero.length : 0}}/15\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n\\r\\n                    <ui-input-container>\\r\\n                        <input #campoBairroCartao=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"info.endereco.bairro\\\" uiInput\\r\\n                               name=\\\"campoBairroCartao\\\" required uiMaxlength=\\\"50\\\">\\r\\n                        <label>Bairro</label>\\r\\n                        <div class=\\\"ui-messages\\\">\\r\\n                            <div *ngIf=\\\"campoBairroCartao.errors && campoBairroCartao.dirty\\\">\\r\\n                                <div class=\\\"ui-message error\\\"\\r\\n                                     [hidden]=\\\"!campoBairroCartao.pristine && !campoBairroCartao.errors.required\\\">\\r\\n                                    Bairro é obrigatório\\r\\n                                </div>\\r\\n                                <div class=\\\"ui-message counter error\\\" [hidden]=\\\"!campoBairroCartao.errors.uiMaxlength\\\">\\r\\n                                    {{info.endereco.bairro ? info.endereco.bairro.length : 0}}/50\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ui-input-container>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"ui-fab-container\\\">\\r\\n                    <button class=\\\"ui-button accent fab\\\" uiRipple>\\r\\n                        <i class=\\\"material-icons\\\">save</i>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </ui-card-content>\\r\\n    </ui-card>\\r\\n</div>\\r\\n\\r\\n<ui-menu #menuDelete>\\r\\n    <div class=\\\"ui-menu-content size-2x\\\">\\r\\n        <ui-subheader>Deseja excluir?</ui-subheader>\\r\\n        <div class=\\\"ui-menu-item\\\" uiRipple (click)=\\\"confirmDelete()\\\">\\r\\n            Sim\\r\\n        </div>\\r\\n        <div class=\\\"ui-menu-item\\\" uiRipple>\\r\\n            Não\\r\\n        </div>\\r\\n    </div>\\r\\n</ui-menu>\\r\\n\"","module.exports = \":host ui-card {\\n  margin-bottom: 16px; }\\n  @media (max-width: 760px) {\\n    :host ui-card {\\n      margin-bottom: 85px; } }\\n\"","import {Component, OnInit, OnDestroy, ElementRef} from '@angular/core';\r\nimport {Title} from '@angular/platform-browser';\r\nimport {UiToolbarService, UiElement, UiSnackbar} from 'ng-smn-ui';\r\nimport {Router, ActivatedRoute} from '@angular/router';\r\nimport {ApiService} from '../../../../core/api/api.service';\r\nimport {environment} from '../../../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'professor-info-component',\r\n    templateUrl: 'professor-info.component.html',\r\n    styleUrls: ['professor-info.component.scss']\r\n})\r\n\r\nexport class ProfessorInfoComponent implements OnInit, OnDestroy {\r\n    info: any;\r\n    addingNew: boolean;\r\n    buscandoCep: boolean;\r\n    estados;\r\n    cidades;\r\n\r\n    constructor(\r\n        private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        public router: Router,\r\n        private activedRoute: ActivatedRoute,\r\n        private api: ApiService,\r\n        private element: ElementRef\r\n    ) {\r\n        this.info = {\r\n            endereco: {}\r\n        };\r\n        this.estados = [];\r\n        this.cidades = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('UnifaSystem - Professor');\r\n        this.toolbarService.set('Professor');\r\n        this.toolbarService.activateExtendedToolbar(600);\r\n\r\n        if (this.activedRoute.snapshot.params['id']) {\r\n            setTimeout(() => {\r\n                this.addingNew = false;\r\n            });\r\n            this.getInfo();\r\n        } else {\r\n            setTimeout(() => {\r\n                this.addingNew = true;\r\n            });\r\n        }\r\n\r\n        this.getEstados();\r\n        this.getCidades();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.toolbarService.deactivateExtendedToolbar();\r\n    }\r\n\r\n    onSubmit(form) {\r\n        for (const control in form.controls) {\r\n            if (form.controls.hasOwnProperty(control)) {\r\n                form.controls[control].markAsTouched();\r\n                form.controls[control].markAsDirty();\r\n            }\r\n        }\r\n\r\n        if (!form.valid) {\r\n            UiElement.focus(this.element.nativeElement.querySelector('form .ng-invalid'));\r\n            return false;\r\n        }\r\n\r\n        if (this.addingNew) {\r\n            this.api\r\n                .prep('administracao', 'professor', 'inserir')\r\n                .call(this.info)\r\n                .subscribe(() => {\r\n                    UiSnackbar.show({\r\n                        text: 'Professor cadastrado com sucesso!'\r\n                    });\r\n                    this.router.navigate(['professor']);\r\n                });\r\n        } else {\r\n            this.api\r\n                .prep('administracao', 'professor', 'atualizar')\r\n                .call(this.info)\r\n                .subscribe(() => {\r\n                    UiSnackbar.show({\r\n                        text: 'Professor alterado com sucesso!'\r\n                    });\r\n                    this.router.navigate(['professor']);\r\n                });\r\n        }\r\n    }\r\n\r\n    getInfo() {\r\n        this.api\r\n            .prep('administracao', 'professor', 'selecionarPorId')\r\n            .call({\r\n                id: this.activedRoute.snapshot.params.id\r\n            })\r\n            .subscribe(data => {\r\n                this.info = data.content;\r\n            }, () => {\r\n                UiSnackbar.show({\r\n                    text: 'Não foi possível buscar os dados'\r\n                });\r\n            });\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.api\r\n            .prep('administracao', 'professor', 'excluir')\r\n            .call({id: this.info.id})\r\n            .subscribe(() => {\r\n                UiSnackbar.show({\r\n                    text: 'Professor removido com sucesso'\r\n                });\r\n                this.router.navigate(['professor']);\r\n            });\r\n    }\r\n\r\n    getCep(form, value) {\r\n        if (!this.buscandoCep) {\r\n            this.buscandoCep = true;\r\n\r\n            this.api\r\n                .http('GET', `https://viacep.com.br/ws/${value}/json/`)\r\n                .call()\r\n                .subscribe((res) => {\r\n                    if (!res.erro) {\r\n                        this.info.bairro = res.bairro;\r\n                        this.info.logradouro = res.logradouro;\r\n                        this.info.uf = res.uf;\r\n                        this.info.idCidade = res.ibge;\r\n                    } else {\r\n                        form.controls.campoCepCartao.setErrors({invalidCep: true});\r\n                        this.info.bairro = '';\r\n                        this.info.logradouro = '';\r\n                        this.info.uf = null;\r\n                        this.info.idCidade = '';\r\n                    }\r\n\r\n                }, (err) => {\r\n                    console.log(err);\r\n                }, () => {\r\n                    this.buscandoCep = false;\r\n                });\r\n        }\r\n    }\r\n\r\n    verifyLogon(form, logon) {\r\n        if (logon.length) {\r\n            this.api\r\n                .http('POST', `${environment.AUTH_API}/login/dados`)\r\n                .call({login: logon})\r\n                .subscribe((res) => {\r\n                    form.controls.campoLogon.setErrors({alreadyExist: true});\r\n                    UiSnackbar.show({\r\n                        text: 'Logon já cadastrado, por favor escolha outro'\r\n                    });\r\n                }, null, () => {\r\n                    this.buscandoCep = false;\r\n                });\r\n        }\r\n    }\r\n\r\n    getEstados() {\r\n        this.api\r\n            .prep('administracao', 'estado', 'selecionar')\r\n            .call()\r\n            .subscribe(data => {\r\n                this.estados = data.content;\r\n            });\r\n    }\r\n\r\n    getCidades() {\r\n        this.api\r\n            .prep('administracao', 'cidade', 'selecionar')\r\n            .call({uf: this.info.uf || ''})\r\n            .subscribe(data => {\r\n                this.cidades = data.content;\r\n            });\r\n    }\r\n\r\n    senhasIguais(form) {\r\n        if (this.info.senha && this.info.confirmaSenha) {\r\n            if (this.info.senha !== this.info.confirmaSenha) {\r\n                form.controls['campoSenha'].setErrors({wrongPass: true});\r\n                form.controls['campoConfirmaSenha'].setErrors({wrongPass: true});\r\n                return false;\r\n            }\r\n            form.controls['campoSenha'].updateValueAndValidity();\r\n            form.controls['campoConfirmaSenha'].updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    changeVisibility(el, btn) {\r\n        if (el.type === 'text') {\r\n            el.type = 'password';\r\n            this.element.nativeElement.querySelectorAll('.change-type i')[btn].innerHTML = 'visibility';\r\n        } else {\r\n            el.type = 'text';\r\n            this.element.nativeElement.querySelectorAll('.change-type i')[btn].innerHTML = 'visibility_off';\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"ui-s480\\\">\\r\\n    <ui-card class=\\\"elevate-on-toolbar\\\">\\r\\n        <ui-data-table class=\\\"responsive\\\">\\r\\n            <tbody>\\r\\n            <tr>\\r\\n                <th>\\r\\n                    Nome\\r\\n                </th>\\r\\n                <th>\\r\\n                    Status\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr *ngFor=\\\"let item of list\\\" [routerLink]=\\\"['/professor', item.id]\\\">\\r\\n                <td data-title=\\\"Nome\\\" [class.empty]=\\\"!item.nome\\\">\\r\\n                    <span class=\\\"ellipsis\\\">\\r\\n                        {{item.nome}}\\r\\n                    </span>\\r\\n                </td>\\r\\n                <td data-title=\\\"Status\\\" [class.empty]=\\\"!item.ativo\\\">\\r\\n                    <span class=\\\"ellipsis\\\">\\r\\n                        {{item.ativo ? 'Ativo' : 'Inativo'}}\\r\\n                    </span>\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr class=\\\"empty\\\" *ngIf=\\\"!list || !list.length\\\">\\r\\n                <td colspan=\\\"4\\\">{{loading ? 'Carregando...' : 'Nenhum curso encontrado'}}</td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n            <tr>\\r\\n                <td colspan=\\\"4\\\" class=\\\"align-right\\\">\\r\\n                    <div class=\\\"ui-button-container align-right\\\">\\r\\n                        <span class=\\\"pagination\\\" *ngIf=\\\"totalLinhas\\\">\\r\\n                            {{((pagina - 1) * 10) + 1}}-{{pagina * 10 < totalLinhas ? pagina * 10 : totalLinhas}} de {{totalLinhas}}\\r\\n                        </span>\\r\\n                        <button class=\\\"ui-button flat icon\\\" uiRipple [disabled]=\\\"pagina < 2\\\"\\r\\n                                (click)=\\\"pagina = pagina - 1; getInfo();\\\">\\r\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_left</i>\\r\\n                        </button>\\r\\n                        <button class=\\\"ui-button flat icon\\\" uiRipple [disabled]=\\\"totalLinhas < pagina * 10\\\"\\r\\n                                (click)=\\\"pagina = pagina + 1; getInfo();\\\">\\r\\n                            <i class=\\\"material-icons\\\">keyboard_arrow_right</i>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tfoot>\\r\\n        </ui-data-table>\\r\\n    </ui-card>\\r\\n    <div class=\\\"ui-fab-container\\\">\\r\\n        <button class=\\\"ui-button accent fab\\\" uiRipple [routerLink]=\\\"['novo']\\\">\\r\\n            <i class=\\\"material-icons\\\">add</i>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {Component, OnInit, ViewChild, ElementRef, OnDestroy} from '@angular/core';\r\nimport {Title} from '@angular/platform-browser';\r\nimport {UiToolbarService, UiElement, UiSnackbar} from 'ng-smn-ui';\r\nimport {Router} from '@angular/router';\r\nimport {ApiService} from '../../../../core/api/api.service';\r\n\r\n@Component({\r\n    selector: 'professor-list-component',\r\n    templateUrl: 'professor-list.component.html',\r\n    styleUrls: ['professor-list.component.scss']\r\n})\r\n\r\nexport class ProfessorListComponent implements OnInit, OnDestroy {\r\n    list: any;\r\n    loading: boolean;\r\n    totalLinhas: number;\r\n    pagina: number;\r\n\r\n    constructor(\r\n        private titleService: Title,\r\n        private toolbarService: UiToolbarService,\r\n        private element: ElementRef,\r\n        private router: Router,\r\n        private api: ApiService\r\n    ) {\r\n        this.list = [];\r\n        this.pagina = 1;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('UnfaSystem - Professor');\r\n        this.toolbarService.set('Lista de professores');\r\n        this.toolbarService.activateExtendedToolbar(480);\r\n\r\n        this.getInfo();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.toolbarService.deactivateExtendedToolbar();\r\n    }\r\n\r\n    getInfo() {\r\n        if (!this.loading) {\r\n            this.loading = true;\r\n\r\n            this.api\r\n                .prep('administracao', 'professor', 'selecionar')\r\n                .call({\r\n                    filtro: '',\r\n                    pagina: this.pagina,\r\n                    linhas: 10\r\n                })\r\n                .subscribe(data => {\r\n                    this.list = data.content;\r\n                    this.totalLinhas = data.totalLinhas;\r\n                }, () => {\r\n                    UiSnackbar.show({\r\n                        text: 'Não foi possível carregar os professores'\r\n                    });\r\n                }, () => {\r\n                    this.loading = false;\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\n","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { UiToolbarService } from 'ng-smn-ui';\r\n\r\n@Component({\r\n    selector: 'professor-component',\r\n    templateUrl: 'professor.component.html',\r\n    styleUrls: []\r\n})\r\n\r\nexport class ProfessorComponent implements OnInit {\r\n\r\n    constructor(\r\n        private titleService: Title,\r\n        private toolbarService: UiToolbarService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.titleService.setTitle('Professores');\r\n        this.toolbarService.set('Professores');\r\n    }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { ProfessorComponent } from './professor.component';\r\nimport { ProfessorListComponent } from './list/professor-list.component';\r\nimport { SharedModule } from '../../../shared.module';\r\nimport { ProfessorInfoComponent } from './info/professor-info.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    exports: [],\r\n    declarations: [ProfessorComponent, ProfessorListComponent, ProfessorInfoComponent],\r\n    providers: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class ProfessorModule { }\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    // Sistema\r\n    SYSTEM_PREFIX: 'UnifaSystem', // Prefixo para indentificar o sistema, usado nos cookies,\r\n    // SMN Auth\r\n    AUTH_API: 'http://localhost:4200', // API do auth\r\n    AUTH_BY_EMAIL: false // O sistema faz o login atráves do e-mail\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}